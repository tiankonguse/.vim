!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BossAPI	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^namespace BossAPI$/;"	n
BossAPI::CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	class CModCacheApi$/;"	c	namespace:BossAPI
BossAPI::CModCacheApi::CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			CModCacheApi();$/;"	p	class:BossAPI::CModCacheApi	access:protected	signature:()
BossAPI::CModCacheApi::MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int MCReport(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterfaceId, const int iTimeCost, const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int iCmd=0)
BossAPI::CModCacheApi::MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int MCReport(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterfaceId, const int iTimeCost, const int iReturnValue=0, const unsigned int uiPassiveIP=0, const std::string &strPassiveName=Ó, const int iCmd=0)
BossAPI::CModCacheApi::_m_bInit	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			bool _m_bInit;$/;"	m	class:BossAPI::CModCacheApi	access:private
BossAPI::CModCacheApi::_m_pModCall	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static CModCacheApi* _m_pModCall;$/;"	m	class:BossAPI::CModCacheApi	access:private
BossAPI::CModCacheApi::_m_pModcallStorage	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			void* _m_pModcallStorage;$/;"	m	class:BossAPI::CModCacheApi	access:private
BossAPI::CModCacheApi::destory	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static int destory();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
BossAPI::CModCacheApi::init	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int init();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
BossAPI::CModCacheApi::instance	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static CModCacheApi* instance();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
BossAPI::CModCacheApi::~CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			~CModCacheApi();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
BossAPI::CModCallApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    class CModCallApi$/;"	c	namespace:BossAPI
BossAPI::CModCallApi::CModCallApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        	CModCallApi();$/;"	p	class:BossAPI::CModCallApi	access:public	signature:()
BossAPI::CModCallApi::MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCReport(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0, const std::string &stdPassiveIP=Ó, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
BossAPI::CModCallApi::MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCReport(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0, int iPassiveIP=0, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
BossAPI::CModCallApi::MCStart	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCStart();$/;"	p	class:BossAPI::CModCallApi	access:public	signature:()
BossAPI::CModCallApi::MCStop	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCStop(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iResult, int iReturnValue=0, int iInitInterface=0, const std::string &stdPassiveIP=Ó, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
BossAPI::CModCallApi::NeedSampling	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            bool NeedSampling(int result);        $/;"	p	class:BossAPI::CModCallApi	access:protected	signature:(int result)
BossAPI::CModCallApi::SetSampleRatio	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            void SetSampleRatio(int ratio = 20, int result = 0);$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int ratio = 20, int result = 0)
BossAPI::CModCallApi::SetVersion	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            void SetVersion(const std::string strVersion);$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(const std::string strVersion)
BossAPI::CModCallApi::WriteMcInfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int WriteMcInfo(ModuleCallLogInfo &oInfo, int iSampleRate);$/;"	p	class:BossAPI::CModCallApi	access:private	signature:(ModuleCallLogInfo &oInfo, int iSampleRate)
BossAPI::CModCallApi::_m_o_modulecallinfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            ModuleCallLogInfo _m_o_modulecallinfo;$/;"	m	class:BossAPI::CModCallApi	access:protected
BossAPI::CModCallApi::_m_sample_flag	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            short _m_sample_flag;$/;"	m	class:BossAPI::CModCallApi	access:protected
BossAPI::CModCallApi::_m_sample_rate	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int _m_sample_rate;$/;"	m	class:BossAPI::CModCallApi	access:private
BossAPI::CModCallApi::_m_tv_begin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            struct timeval	  _m_tv_begin;$/;"	m	class:BossAPI::CModCallApi	typeref:struct:BossAPI::CModCallApi::timeval	access:protected
BossAPI::CModCallApi::_m_tv_end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            struct timeval	  _m_tv_end;$/;"	m	class:BossAPI::CModCallApi	typeref:struct:BossAPI::CModCallApi::timeval	access:protected
BossAPI::CModCallApi::isBegin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            bool isBegin;	$/;"	m	class:BossAPI::CModCallApi	access:private
BossAPI::CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	class CModCallTimer$/;"	c	namespace:BossAPI
BossAPI::CModCallTimer::CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		CModCallTimer();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
BossAPI::CModCallTimer::CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		CModCallTimer(const int iInitModuleId, const int iInitInterfaceId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface)
BossAPI::CModCallTimer::_m_init_interfaceid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_init_interfaceid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
BossAPI::CModCallTimer::_m_init_moduleid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_init_moduleid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
BossAPI::CModCallTimer::_m_passive_interfaceid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_passive_interfaceid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
BossAPI::CModCallTimer::_m_passive_moduleid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_passive_moduleid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
BossAPI::CModCallTimer::_m_tv_begin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        struct timeval	  _m_tv_begin;$/;"	m	class:BossAPI::CModCallTimer	typeref:struct:BossAPI::CModCallTimer::timeval	access:protected
BossAPI::CModCallTimer::_m_tv_end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        struct timeval	  _m_tv_end;$/;"	m	class:BossAPI::CModCallTimer	typeref:struct:BossAPI::CModCallTimer::timeval	access:protected
BossAPI::CModCallTimer::end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int end(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface, const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int cmd=0)
BossAPI::CModCallTimer::end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int end(const int iReturnValue=0, const std::string &stdPassiveIP="",$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int cmd=0)
BossAPI::CModCallTimer::isBegin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        bool isBegin;$/;"	m	class:BossAPI::CModCallTimer	access:protected
BossAPI::CModCallTimer::start	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int start();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
BossAPI::CModCallTimer::start	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int start(const int iInitModuleId, const int iInitInterfaceId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface)
BossAPI::CModCallTimer::~CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		~CModCallTimer();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
BossAPI::CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^class CPerfReport{$/;"	c	namespace:BossAPI
BossAPI::CPerfReport::CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        CPerfReport();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
BossAPI::CPerfReport::addParam	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		void addParam(const string& key, long long value);$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& key, long long value)
BossAPI::CPerfReport::addParam	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	    void addParam(const string& key, const string& value);$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& key, const string& value)
BossAPI::CPerfReport::m_params	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		string m_params;$/;"	m	class:BossAPI::CPerfReport	access:private
BossAPI::CPerfReport::m_pnum	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int m_pnum;$/;"	m	class:BossAPI::CPerfReport	access:private
BossAPI::CPerfReport::max_pnum	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	enum { max_pnum = 10 }; $/;"	e	enum:BossAPI::CPerfReport::__anon1
BossAPI::CPerfReport::report	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int report(const string& sClientip,$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& sClientip, long long qq, const string& sModule, const string& sop, int isFail, long long iFlow, int iRetCode, const string& sDomain, int iModuleId, int iVer, int iTimeCost, int iPlatform, int iRLen, const string& sCliVer, const string& sURL, const string& sRefer )
BossAPI::CPerfReport::reset	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		void reset();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
BossAPI::CPerfReport::~CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        ~CPerfReport();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
BossAPI::ModuleCallLogInfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    }ModuleCallLogInfo;$/;"	t	namespace:BossAPI	typeref:struct:BossAPI::_MODULECALL_LOG_INFO_
BossAPI::RT_DB_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_DB_FAULT = 0x03,$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_FAIL	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_FAIL = 0x01,		\/\/Ê§°Ü$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_IO_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_IO_FAULT = 0x05,$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_LOGIC_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_LOGIC_FAULT = 0x02,$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_NET_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_NET_FAULT = 0x04,$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_OTHER_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_OTHER_FAULT = 0x06$/;"	e	enum:BossAPI::em_ResultType
BossAPI::RT_SUCCESS	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_SUCCESS = 0x00,	\/\/³É¹¦$/;"	e	enum:BossAPI::em_ResultType
BossAPI::ReportPerf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int ReportPerf(const char *appName, const int retCode, const long iTimeCost,  const int isCgi, const char *remoteIp, $/;"	p	namespace:BossAPI	signature:(const char *appName, const int retCode, const long iTimeCost, const int isCgi, const char *remoteIp, int remotePort, const char* clientIp, const char *fileName, const char *funcName)
BossAPI::_MODULECALL_LOG_INFO_	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    typedef struct _MODULECALL_LOG_INFO_$/;"	s	namespace:BossAPI
BossAPI::_MODULECALL_LOG_INFO_::_MODULECALL_LOG_INFO_	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	_MODULECALL_LOG_INFO_()$/;"	f	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public	signature:()
BossAPI::_MODULECALL_LOG_INFO_::iCnt	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iCnt;			\/\/µ÷ÓÃ´ÎÊý£¬ÓÐ²ÉÑùÂÊÉÏ±¨Ê±·Å´ó$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iInitInterface	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iInitInterface;	\/\/Ö÷µ÷½Ó¿ÚID $/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iInitModuleId	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iInitModuleId;	\/\/Ö÷µ÷Ä£¿éID $/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iPassiveIP	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	unsigned long iPassiveIP;		\/\/±»µ÷Ä£¿éIP$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iPassiveInterface	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassiveInterface;	\/\/±»µ÷Ä£¿é½Ó¿ÚID$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iPassiveModuleId	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassiveModuleId;	\/\/±»µ÷Ä£¿éID$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iPassivePort	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassivePort;	\/\/±»µ÷Ä£¿é¶Ë¿Ú$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReq_msglen	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReq_msglen;	\/\/ÇëÇó°ü³¤¶È£¬¿ÉÑ¡$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReserved1	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved1;		\/\/±£Áô×Ö¶Î1$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReserved2	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved2;		\/\/±£Áô×Ö¶Î2$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReserved3	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved3;		\/\/±£Áô×Ö¶Î3$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReserved4	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved4;		\/\/±£Áô×Ö¶Î4$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iResult	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iResult;		\/\/µ÷ÓÃ½á¹û  0 ³É¹¦ 1 Ê§°Ü 2Âß¼­Ê§°Ü 3Êý¾Ý¿âÒì³£ 4ÍøÂçÒì³£ 5 IOÒì³£ 6ÆäËüÒì³£$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iReturnValue	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReturnValue; 	\/\/·µ»ØÖµ$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iRsp_msglen	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iRsp_msglen;	\/\/ÏìÓ¦°ü³¤¶È£¬¿ÉÑ¡$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::iTimeCost	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iTimeCost;		\/\/µ÷ÓÃºÄÊ±,ºÁÃë¼ÆÊ±$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::init	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	void init()$/;"	f	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public	signature:()
BossAPI::_MODULECALL_LOG_INFO_::strPassiveName	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strPassiveName;	\/\/±»µ÷Ãû×Ö£¬ÎªÃû×Ö·þÎñÔ¤Áô$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::strReserved1	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strReserved1;	\/\/±£Áô×Ö¶Î5$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::strReserved2	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strReserved2;	\/\/±£Áô×Ö¶Î6$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::strVersion	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strVersion;$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::_MODULECALL_LOG_INFO_::ullTotalCost	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	unsigned long long ullTotalCost;	\/\/×ÜºÄÊ±£¬iTimeCost * iCnt$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
BossAPI::beginPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int beginPerfReport(const char * appName, int isCgi, const char * remoteIp, uint16_t remotePort, $/;"	p	namespace:BossAPI	signature:(const char * appName, int isCgi, const char * remoteIp, uint16_t remotePort, const char* clientIp, const char * fileName, const char * funcName)
BossAPI::em_ResultType	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    enum em_ResultType$/;"	g	namespace:BossAPI
BossAPI::endPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int endPerfReport(int retCode);$/;"	p	namespace:BossAPI	signature:(int retCode)
BossAPI::log_data	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int log_data(unsigned int _boss_id, const char* _data, const uint16_t _len);$/;"	p	namespace:BossAPI	signature:(unsigned int _boss_id, const char* _data, const uint16_t _len)
BossAPI::logprintf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int logprintf(const unsigned int _boss_id, const char* _format, ...);$/;"	p	namespace:BossAPI	signature:(const unsigned int _boss_id, const char* _format, ...)
BossAPI::sendAccessLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int sendAccessLog(long long uin, const char* module, const char* oper, $/;"	p	namespace:BossAPI	signature:(long long uin, const char* module, const char* oper, int retcode, long long iflow, const char* msg, const char* srcfile, int srcline, const char* func)
BossAPI::sendError	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int sendError(const char* module, long long uin, const char* cmd, $/;"	p	namespace:BossAPI	signature:(const char* module, long long uin, const char* cmd, short level, int errcode, const char* msg, const char* srcfile, int srcline, const char* func)
CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			CModCacheApi();$/;"	p	class:BossAPI::CModCacheApi	access:protected	signature:()
CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	class CModCacheApi$/;"	c	namespace:BossAPI
CModCallApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        	CModCallApi();$/;"	p	class:BossAPI::CModCallApi	access:public	signature:()
CModCallApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    class CModCallApi$/;"	c	namespace:BossAPI
CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		CModCallTimer();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		CModCallTimer(const int iInitModuleId, const int iInitInterfaceId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface)
CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	class CModCallTimer$/;"	c	namespace:BossAPI
CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        CPerfReport();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^class CPerfReport{$/;"	c	namespace:BossAPI
MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int MCReport(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterfaceId, const int iTimeCost, const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int iCmd=0)
MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int MCReport(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterfaceId, const int iTimeCost, const int iReturnValue=0, const unsigned int uiPassiveIP=0, const std::string &strPassiveName=Ó, const int iCmd=0)
MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCReport(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0, const std::string &stdPassiveIP=Ó, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
MCReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCReport(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iTimeCost, int iResult, int iReturnValue=0, int iInitInterface=0, int iPassiveIP=0, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
MCStart	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCStart();$/;"	p	class:BossAPI::CModCallApi	access:public	signature:()
MCStop	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int MCStop(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iResult, int iReturnValue=0, int iInitInterface=0,$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int iInitModuleId,int iPassiveModuleId,int iPassiveInterface, int iResult, int iReturnValue=0, int iInitInterface=0, const std::string &stdPassiveIP=Ó, int iPassivePort=0, const std::string &strPassiveName=Ó, const int iReqMsgLen = 0, const int iRspMsgLen = 0)
MODCALL_DESTORY	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	333;"	d
MODCALL_INIT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	327;"	d
MODCALL_INIT_REPORT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	346;"	d
MODCALL_PAS_REPORT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	353;"	d
MODCALL_REPORT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	339;"	d
ModuleCallLogInfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    }ModuleCallLogInfo;$/;"	t	namespace:BossAPI	typeref:struct:BossAPI::_MODULECALL_LOG_INFO_
NeedSampling	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            bool NeedSampling(int result);        $/;"	p	class:BossAPI::CModCallApi	access:protected	signature:(int result)
RT_DB_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_DB_FAULT = 0x03,$/;"	e	enum:BossAPI::em_ResultType
RT_FAIL	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_FAIL = 0x01,		\/\/Ê§°Ü$/;"	e	enum:BossAPI::em_ResultType
RT_IO_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_IO_FAULT = 0x05,$/;"	e	enum:BossAPI::em_ResultType
RT_LOGIC_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_LOGIC_FAULT = 0x02,$/;"	e	enum:BossAPI::em_ResultType
RT_NET_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_NET_FAULT = 0x04,$/;"	e	enum:BossAPI::em_ResultType
RT_OTHER_FAULT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_OTHER_FAULT = 0x06$/;"	e	enum:BossAPI::em_ResultType
RT_SUCCESS	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	RT_SUCCESS = 0x00,	\/\/³É¹¦$/;"	e	enum:BossAPI::em_ResultType
ReportPerf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int ReportPerf(const char *appName, const int retCode, const long iTimeCost,  const int isCgi, const char *remoteIp, $/;"	p	namespace:BossAPI	signature:(const char *appName, const int retCode, const long iTimeCost, const int isCgi, const char *remoteIp, int remotePort, const char* clientIp, const char *fileName, const char *funcName)
SEND_LOG_ACCESS	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	62;"	d
SEND_LOG_ERROR	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	83;"	d
SetSampleRatio	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            void SetSampleRatio(int ratio = 20, int result = 0);$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(int ratio = 20, int result = 0)
SetVersion	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            void SetVersion(const std::string strVersion);$/;"	p	class:BossAPI::CModCallApi	access:public	signature:(const std::string strVersion)
TMsgLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	TMsgLog();$/;"	p	class:TMsgLog	access:public	signature:()
TMsgLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	TMsgLog(const int iLevel, const char* pOperId);$/;"	p	class:TMsgLog	access:public	signature:(const int iLevel, const char* pOperId)
TMsgLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^class TMsgLog$/;"	c
TMsgLog::TMsgLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	TMsgLog();$/;"	p	class:TMsgLog	access:public	signature:()
TMsgLog::TMsgLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	TMsgLog(const int iLevel, const char* pOperId);$/;"	p	class:TMsgLog	access:public	signature:(const int iLevel, const char* pOperId)
TMsgLog::msgprintf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int msgprintf (unsigned int level, const char* fmt, ...) __attribute__((format(printf, 3, 4)));$/;"	p	class:TMsgLog	access:public	signature:(unsigned int level, const char* fmt, ...)
TMsgLog::setMsgID	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int setMsgID(const int iMsgId);$/;"	p	class:TMsgLog	access:public	signature:(const int iMsgId)
VIDEO_MODULE_INTERFACE_CALL_LOG_FORMAT	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	472;"	d
WEBDEV_BOSS_API_V4_20140723_H	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	8;"	d
WriteMcInfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int WriteMcInfo(ModuleCallLogInfo &oInfo, int iSampleRate);$/;"	p	class:BossAPI::CModCallApi	access:private	signature:(ModuleCallLogInfo &oInfo, int iSampleRate)
_MODULECALL_LOG_INFO_	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	_MODULECALL_LOG_INFO_()$/;"	f	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public	signature:()
_MODULECALL_LOG_INFO_	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    typedef struct _MODULECALL_LOG_INFO_$/;"	s	namespace:BossAPI
_m_bInit	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			bool _m_bInit;$/;"	m	class:BossAPI::CModCacheApi	access:private
_m_init_interfaceid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_init_interfaceid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
_m_init_moduleid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_init_moduleid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
_m_o_modulecallinfo	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            ModuleCallLogInfo _m_o_modulecallinfo;$/;"	m	class:BossAPI::CModCallApi	access:protected
_m_pModCall	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static CModCacheApi* _m_pModCall;$/;"	m	class:BossAPI::CModCacheApi	access:private
_m_pModcallStorage	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			void* _m_pModcallStorage;$/;"	m	class:BossAPI::CModCacheApi	access:private
_m_passive_interfaceid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_passive_interfaceid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
_m_passive_moduleid	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        int _m_passive_moduleid;$/;"	m	class:BossAPI::CModCallTimer	access:protected
_m_sample_flag	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            short _m_sample_flag;$/;"	m	class:BossAPI::CModCallApi	access:protected
_m_sample_rate	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            int _m_sample_rate;$/;"	m	class:BossAPI::CModCallApi	access:private
_m_tv_begin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            struct timeval	  _m_tv_begin;$/;"	m	class:BossAPI::CModCallApi	typeref:struct:BossAPI::CModCallApi::timeval	access:protected
_m_tv_begin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        struct timeval	  _m_tv_begin;$/;"	m	class:BossAPI::CModCallTimer	typeref:struct:BossAPI::CModCallTimer::timeval	access:protected
_m_tv_end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            struct timeval	  _m_tv_end;$/;"	m	class:BossAPI::CModCallApi	typeref:struct:BossAPI::CModCallApi::timeval	access:protected
_m_tv_end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        struct timeval	  _m_tv_end;$/;"	m	class:BossAPI::CModCallTimer	typeref:struct:BossAPI::CModCallTimer::timeval	access:protected
addParam	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		void addParam(const string& key, long long value);$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& key, long long value)
addParam	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	    void addParam(const string& key, const string& value);$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& key, const string& value)
beginPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int beginPerfReport(const char * appName, int isCgi, const char * remoteIp, uint16_t remotePort, $/;"	p	namespace:BossAPI	signature:(const char * appName, int isCgi, const char * remoteIp, uint16_t remotePort, const char* clientIp, const char * fileName, const char * funcName)
boss_vafun	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	11;"	d
boss_vafun	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	13;"	d
destory	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static int destory();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
em_ResultType	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    enum em_ResultType$/;"	g	namespace:BossAPI
end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int end(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface, const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int cmd=0)
end	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int end(const int iReturnValue=0, const std::string &stdPassiveIP="",$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iReturnValue=0, const std::string &stdPassiveIP=Ó, const std::string &strPassiveName=Ó, const int cmd=0)
endPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int endPerfReport(int retCode);$/;"	p	namespace:BossAPI	signature:(int retCode)
format	/usr/local/commlib/platformlib/itil_mcall/include/tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
iCnt	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iCnt;			\/\/µ÷ÓÃ´ÎÊý£¬ÓÐ²ÉÑùÂÊÉÏ±¨Ê±·Å´ó$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iInitInterface	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iInitInterface;	\/\/Ö÷µ÷½Ó¿ÚID $/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iInitModuleId	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iInitModuleId;	\/\/Ö÷µ÷Ä£¿éID $/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iPassiveIP	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	unsigned long iPassiveIP;		\/\/±»µ÷Ä£¿éIP$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iPassiveInterface	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassiveInterface;	\/\/±»µ÷Ä£¿é½Ó¿ÚID$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iPassiveModuleId	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassiveModuleId;	\/\/±»µ÷Ä£¿éID$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iPassivePort	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iPassivePort;	\/\/±»µ÷Ä£¿é¶Ë¿Ú$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReq_msglen	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReq_msglen;	\/\/ÇëÇó°ü³¤¶È£¬¿ÉÑ¡$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReserved1	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved1;		\/\/±£Áô×Ö¶Î1$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReserved2	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved2;		\/\/±£Áô×Ö¶Î2$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReserved3	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved3;		\/\/±£Áô×Ö¶Î3$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReserved4	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReserved4;		\/\/±£Áô×Ö¶Î4$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iResult	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iResult;		\/\/µ÷ÓÃ½á¹û  0 ³É¹¦ 1 Ê§°Ü 2Âß¼­Ê§°Ü 3Êý¾Ý¿âÒì³£ 4ÍøÂçÒì³£ 5 IOÒì³£ 6ÆäËüÒì³£$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iReturnValue	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iReturnValue; 	\/\/·µ»ØÖµ$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iRsp_msglen	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iRsp_msglen;	\/\/ÏìÓ¦°ü³¤¶È£¬¿ÉÑ¡$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
iTimeCost	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	int iTimeCost;		\/\/µ÷ÓÃºÄÊ±,ºÁÃë¼ÆÊ±$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
init	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			int init();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
init	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	void init()$/;"	f	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public	signature:()
instance	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			static CModCacheApi* instance();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
isBegin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^            bool isBegin;	$/;"	m	class:BossAPI::CModCallApi	access:private
isBegin	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        bool isBegin;$/;"	m	class:BossAPI::CModCallTimer	access:protected
log_data	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int log_data(unsigned int _boss_id, const char* _data, const uint16_t _len);$/;"	p	namespace:BossAPI	signature:(unsigned int _boss_id, const char* _data, const uint16_t _len)
logprintf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int logprintf(const unsigned int _boss_id, const char* _format, ...);$/;"	p	namespace:BossAPI	signature:(const unsigned int _boss_id, const char* _format, ...)
m_params	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		string m_params;$/;"	m	class:BossAPI::CPerfReport	access:private
m_pnum	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int m_pnum;$/;"	m	class:BossAPI::CPerfReport	access:private
max_pnum	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	enum { max_pnum = 10 }; $/;"	e	enum:BossAPI::CPerfReport::__anon1
msgprintf	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int msgprintf (unsigned int level, const char* fmt, ...) __attribute__((format(printf, 3, 4)));$/;"	p	class:TMsgLog	access:public	signature:(unsigned int level, const char* fmt, ...)
report	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int report(const string& sClientip,$/;"	p	class:BossAPI::CPerfReport	access:public	signature:(const string& sClientip, long long qq, const string& sModule, const string& sop, int isFail, long long iFlow, int iRetCode, const string& sDomain, int iModuleId, int iVer, int iTimeCost, int iPlatform, int iRLen, const string& sCliVer, const string& sURL, const string& sRefer )
reset	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		void reset();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
sendAccessLog	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int sendAccessLog(long long uin, const char* module, const char* oper, $/;"	p	namespace:BossAPI	signature:(long long uin, const char* module, const char* oper, int retcode, long long iflow, const char* msg, const char* srcfile, int srcline, const char* func)
sendError	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    int sendError(const char* module, long long uin, const char* cmd, $/;"	p	namespace:BossAPI	signature:(const char* module, long long uin, const char* cmd, short level, int errcode, const char* msg, const char* srcfile, int srcline, const char* func)
setMsgID	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^	int setMsgID(const int iMsgId);$/;"	p	class:TMsgLog	access:public	signature:(const int iMsgId)
start	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int start();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
start	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		int start(const int iInitModuleId, const int iInitInterfaceId,$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:(const int iInitModuleId, const int iInitInterfaceId, const int iPassiveModuleId, const int iPassiveInterface)
strPassiveName	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strPassiveName;	\/\/±»µ÷Ãû×Ö£¬ÎªÃû×Ö·þÎñÔ¤Áô$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
strReserved1	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strReserved1;	\/\/±£Áô×Ö¶Î5$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
strReserved2	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strReserved2;	\/\/±£Áô×Ö¶Î6$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
strVersion	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	std::string strVersion;$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
ullTotalCost	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^    	unsigned long long ullTotalCost;	\/\/×ÜºÄÊ±£¬iTimeCost * iCnt$/;"	m	struct:BossAPI::_MODULECALL_LOG_INFO_	access:public
~CModCacheApi	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^			~CModCacheApi();$/;"	p	class:BossAPI::CModCacheApi	access:public	signature:()
~CModCallTimer	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^		~CModCallTimer();$/;"	p	class:BossAPI::CModCallTimer	access:public	signature:()
~CPerfReport	/usr/local/commlib/platformlib/itil_mcall/include/bossapi.h	/^        ~CPerfReport();$/;"	p	class:BossAPI::CPerfReport	access:public	signature:()
