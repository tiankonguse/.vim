let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <S-F2> :A
imap <buffer> <silent> <S-F9> :call C_Arguments()
imap <buffer> <silent> <C-F9> :call C_Run()
imap <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
imap <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
nmap <buffer> <silent> <NL> i=C_JumpCtrlJ()
vnoremap <buffer> /* s/*  */<Left><Left><Left>p
inoremap <buffer> <silent> Â­ =EchoFuncP()
inoremap <buffer> <silent> Â½ =EchoFuncN()
nnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
nnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
nnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
nnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
nnoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
nnoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
nnoremap <buffer> <silent> \cx :call C_CommentToggle( )
nnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
nnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
nnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
nnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
nnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
nnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
nnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
nnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
nnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
nnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
nnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
nnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
nnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
nnoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
nnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
nnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
nnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
nnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
nnoremap <buffer> <silent> \in :call C_CodeFor("down")
nnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
nnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
nnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
nnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
nnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
nnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
nnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
nnoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
nnoremap <buffer> <silent> \np :call C_ProtoPick("function")
nnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
nnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
nnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
nnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
nnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
nmap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \hm :call C_Help("m")
map <buffer> <silent> \hp :call C_HelpCsupport()
map <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
map <buffer> <silent> \rx :call C_XtermSize()
vmap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rs :call C_Settings()
omap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rd :call C_Indent()
map <buffer> <silent> \rpa :call C_SplintArguments()
map <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
map <buffer> <silent> \rma :call C_MakeArguments()
map <buffer> <silent> \rme :call C_MakeExeToRun()
map <buffer> <silent> \rmc :call C_MakeClean()
map <buffer> <silent> \rcm :call C_ChooseMakefile()
map <buffer> <silent> \rm :call C_Make()
map <buffer> <silent> \ra :call C_Arguments()
map <buffer> <silent> \rr :call C_Run()
map <buffer> <silent> \rl :call C_Link():call C_HlMessage()
map <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
vnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points", "v")
onoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
vnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch", "v")
onoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
vnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch", "v")
onoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
noremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
noremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
noremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
noremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
noremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
noremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
noremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
noremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
noremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
noremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
noremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
noremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
noremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
noremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
noremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
noremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
noremap <buffer> \nts :CStyle 
noremap <buffer> <silent> \ntr :call C_RereadTemplates()
noremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
noremap <buffer> <silent> \ns :call C_ProtoShow()
noremap <buffer> <silent> \nc :call C_ProtoClear()
noremap <buffer> <silent> \ni :call C_ProtoInsert()
vnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
onoremap <buffer> <silent> \nm :call C_ProtoPick("method")
vnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
onoremap <buffer> <silent> \nf :call C_ProtoPick("function")
vnoremap <buffer> <silent> \np :call C_ProtoPick("function")
onoremap <buffer> <silent> \np :call C_ProtoPick("function")
noremap <buffer> <silent> \ne :call C_CodeSnippet("e")
vnoremap <buffer> <silent> \nw :call C_CodeSnippet("wv")
onoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
noremap <buffer> <silent> \nr :call C_CodeSnippet("r")
noremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
noremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
vnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file", "v")
onoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
vnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file", "v")
onoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
vnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert", "v")
onoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
vnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof", "v")
onoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
noremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
noremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
noremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
noremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
noremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
vnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union" , "v")
onoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
vnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct", "v")
onoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
vnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum"  , "v")
onoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
vnoremap <buffer> <silent> \in :call C_CodeFor("down")
onoremap <buffer> <silent> \in :call C_CodeFor("down")
vnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
onoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
vnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main", "v")
onoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
vnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static", "v")
onoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
vnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function", "v")
onoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
noremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
noremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
noremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
noremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
vnoremap <buffer> <silent> \pi0 :call C_PPIf0("v")
onoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
vnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif", "v")
vnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif", "v")
vnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif", "v")
vnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif", "v")
vnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif", "v")
onoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
onoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
onoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
onoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
onoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
noremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
noremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
noremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
noremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
noremap <buffer> \+pc :IncludeCppCLibrary 
noremap <buffer> \+ps :IncludeCppLibrary 
noremap <buffer> \pc :IncludeC99Library 
noremap <buffer> \ps :IncludeStdLibrary 
vnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
vnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
noremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
vnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch", "v")
onoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
vnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block", "v")
onoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
noremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
vnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block", "v")
onoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
vnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else", "v")
onoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
vnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else", "v")
onoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
vnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block", "v")
onoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
noremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
vnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block", "v")
onoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
noremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
vnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while", "v")
onoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
noremap <buffer> \csc :SpecialComment 
noremap <buffer> \ckc :KeywordComment 
noremap <buffer> \chs :HFileSection 
noremap <buffer> \ccs :CFileSection 
vnoremap <buffer> <silent> \cx :call C_CommentToggle( )
onoremap <buffer> <silent> \cx :call C_CommentToggle( )
vnoremap <buffer> <silent> \ct s:call C_InsertDateAndTime('dt')a
onoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
vnoremap <buffer> <silent> \cd s:call C_InsertDateAndTime('d')a
onoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
noremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
noremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
noremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
noremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
noremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
noremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
vnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
onoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
vnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
onoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
vnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
onoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
noremap <buffer> <silent> \cs :call C_GetLineEndCommCol()
vnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
nnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
vnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
onoremap <buffer> <silent> \cl :call C_EndOfLineComment()
vnoremap <buffer> { S{}Pk=iB
map <buffer> <silent> <S-F2> :A
map <buffer> <silent> <S-F9> :call C_Arguments()
map <buffer> <silent> <C-F9> :call C_Run()
map <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
map <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
inoremap <buffer> 	 =CodeComplete()=SwitchRegion()
imap <buffer> <silent> <NL> =C_JumpCtrlJ()
inoremap <buffer> <silent> ( (=EchoFunc()
inoremap <buffer> <silent> ) =EchoFuncClear())
inoremap <buffer> /* /*/kA 
inoremap <buffer> /* /*  */<Left><Left><Left>
imap <buffer> <silent> \hm :call C_Help("m")
imap <buffer> <silent> \hp :call C_HelpCsupport()
imap <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
imap <buffer> <silent> \rx :call C_XtermSize()
imap <buffer> <silent> \rs :call C_Settings()
imap <buffer> <silent> \rh :call C_Hardcopy()
imap <buffer> <silent> \rd :call C_Indent()
imap <buffer> <silent> \rpa :call C_SplintArguments()
imap <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
imap <buffer> <silent> \rma :call C_MakeArguments()
imap <buffer> <silent> \rme :call C_MakeExeToRun()
imap <buffer> <silent> \rmc :call C_MakeClean()
imap <buffer> <silent> \rm :call C_Make()
imap <buffer> <silent> \ra :call C_Arguments()
imap <buffer> <silent> \rr :call C_Run()
imap <buffer> <silent> \rl :call C_Link():call C_HlMessage()
imap <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
inoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
inoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
inoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
inoremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
inoremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
inoremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
inoremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
inoremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
inoremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
inoremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
inoremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
inoremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
inoremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
inoremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
inoremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
inoremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
inoremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
inoremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
inoremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
inoremap <buffer> \nts :CStyle 
inoremap <buffer> <silent> \ntr :call C_RereadTemplates()
inoremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
inoremap <buffer> <silent> \ns :call C_ProtoShow()
inoremap <buffer> <silent> \nc :call C_ProtoClear()
inoremap <buffer> <silent> \ni :call C_ProtoInsert()
inoremap <buffer> <silent> \nm :call C_ProtoPick("method")
inoremap <buffer> <silent> \nf :call C_ProtoPick("function")
inoremap <buffer> <silent> \np :call C_ProtoPick("function")
inoremap <buffer> <silent> \ne :call C_CodeSnippet("e")
inoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
inoremap <buffer> <silent> \nr :call C_CodeSnippet("r")
inoremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
inoremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
inoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
inoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
inoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
inoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
inoremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
inoremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
inoremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
inoremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
inoremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
inoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
inoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
inoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
inoremap <buffer> <silent> \in :call C_CodeFor("down")i
inoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )i
inoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
inoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
inoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
inoremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
inoremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
inoremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
inoremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
inoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
inoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
inoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
inoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
inoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
inoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
inoremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
inoremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
inoremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
inoremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
inoremap <buffer> \+pc :IncludeCppC9Library 
inoremap <buffer> \+ps :IncludeCppLibrary 
inoremap <buffer> \pc :IncludeC99Library 
inoremap <buffer> \ps :IncludeStdLibrary 
inoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
inoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
inoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
inoremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
inoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
inoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
inoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
inoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
inoremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
inoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
inoremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
inoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
inoremap <buffer> \csc :SpecialComment 
inoremap <buffer> \ckc :KeywordComment 
inoremap <buffer> \chs :HFileSection 
inoremap <buffer> \ccs :CFileSection 
inoremap <buffer> <silent> \cx :call C_CommentToggle( )
inoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')a
inoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')a
inoremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
inoremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
inoremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
inoremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
inoremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
inoremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
inoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()a
inoremap <buffer> <silent> \cl :call C_EndOfLineComment()
inoremap <buffer> { {}O
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=:0g0t0(sus
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=~/.vim/c-support/wordlists/c-c++-keywords.list,~/.vim/c-support/wordlists/k+r.list,~/.vim/c-support/wordlists/stl_index.list
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal foldcolumn=3
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=omni#cpp#complete#Main
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
36
normal zc
47
normal zc
58
normal zc
69
normal zc
75
normal zo
84
normal zo
90
normal zo
96
normal zo
115
normal zo
115
normal zo
170
normal zo
473
normal zo
483
normal zo
487
normal zo
473
normal zo
495
normal zo
502
normal zo
508
normal zo
512
normal zo
495
normal zo
520
normal zo
529
normal zo
520
normal zo
545
normal zo
550
normal zo
562
normal zo
567
normal zo
577
normal zo
581
normal zo
585
normal zo
589
normal zo
562
normal zo
545
normal zo
601
normal zo
617
normal zo
660
normal zo
672
normal zo
693
normal zo
707
normal zo
751
normal zo
753
normal zo
751
normal zo
779
normal zo
786
normal zo
601
normal zo
796
normal zo
808
normal zo
813
normal zo
817
normal zo
808
normal zo
828
normal zo
832
normal zo
796
normal zo
839
normal zo
845
normal zo
839
normal zo
853
normal zo
857
normal zo
853
normal zo
866
normal zo
872
normal zo
866
normal zo
885
normal zo
887
normal zo
900
normal zo
911
normal zo
885
normal zo
919
normal zo
921
normal zo
919
normal zo
954
normal zo
961
normal zo
954
normal zo
971
normal zo
997
normal zo
1010
normal zo
997
normal zo
1019
normal zo
1025
normal zo
1028
normal zo
1041
normal zo
1025
normal zo
1056
normal zo
1060
normal zo
1064
normal zo
1068
normal zo
1075
normal zo
1079
normal zo
1068
normal zo
1084
normal zo
1064
normal zo
1095
normal zo
1099
normal zo
1019
normal zo
1110
normal zo
1113
normal zo
1110
normal zo
1122
normal zo
1127
normal zo
1131
normal zo
1142
normal zo
1146
normal zo
1150
normal zo
1122
normal zo
1157
normal zo
1183
normal zo
1184
normal zo
1183
normal zo
1230
normal zo
1235
normal zo
1252
normal zo
1230
normal zo
1264
normal zo
1273
normal zo
1283
normal zo
1296
normal zo
1300
normal zo
1264
normal zo
1309
normal zo
1313
normal zo
1318
normal zo
1324
normal zo
1327
normal zo
1324
normal zo
1332
normal zo
1309
normal zo
1340
normal zo
1348
normal zo
1340
normal zo
1360
normal zo
1368
normal zo
1360
normal zo
1380
normal zo
1388
normal zo
1396
normal zo
1401
normal zo
1403
normal zo
1401
normal zo
1410
normal zo
1412
normal zo
1410
normal zo
1418
normal zo
1422
normal zo
1429
normal zo
1434
normal zo
1436
normal zo
1440
normal zo
1436
normal zo
1434
normal zo
1388
normal zo
1448
normal zo
1380
normal zo
1457
normal zo
1459
normal zo
1466
normal zo
1472
normal zo
1476
normal zo
1457
normal zo
1484
normal zo
1500
normal zo
1504
normal zo
1484
normal zo
1512
normal zo
1514
normal zo
1529
normal zo
1535
normal zo
1541
normal zo
1544
normal zo
1547
normal zo
1550
normal zo
1547
normal zo
1544
normal zo
1541
normal zo
1560
normal zo
1572
normal zo
1574
normal zo
1572
normal zo
1581
normal zo
1589
normal zo
1607
normal zo
1615
normal zo
1627
normal zo
1636
normal zo
1642
normal zo
1647
normal zo
1655
normal zo
1661
normal zo
1667
normal zo
1672
normal zo
1647
normal zo
1681
normal zo
1636
normal zo
1689
normal zo
1698
normal zo
1607
normal zo
1589
normal zo
1535
normal zo
1710
normal zo
1512
normal zo
1721
normal zo
1726
normal zo
1731
normal zo
1735
normal zo
1739
normal zo
1721
normal zo
1748
normal zo
1753
normal zo
1748
normal zo
1762
normal zo
1766
normal zo
1762
normal zo
1777
normal zo
1786
normal zo
1788
normal zo
1790
normal zo
1788
normal zo
1786
normal zo
1777
normal zo
1800
normal zo
1803
normal zo
1800
normal zo
1812
normal zo
1818
normal zo
1812
normal zo
1828
normal zo
1832
normal zo
1838
normal zo
1832
normal zo
1849
normal zo
1867
normal zo
1885
normal zo
1893
normal zo
1902
normal zo
1904
normal zo
1902
normal zo
1914
normal zo
1916
normal zo
1914
normal zo
1927
normal zo
1849
normal zo
1938
normal zo
1944
normal zo
1946
normal zo
1948
normal zo
1952
normal zo
1956
normal zo
1946
normal zo
1961
normal zo
1965
normal zo
1944
normal zo
1971
normal zo
1974
normal zo
1978
normal zo
1971
normal zo
1985
normal zo
1989
normal zo
1938
normal zo
2000
normal zo
2008
normal zo
2000
normal zo
2016
normal zo
2025
normal zo
2032
normal zo
2038
normal zo
2042
normal zo
2046
normal zo
2052
normal zo
2057
normal zo
2038
normal zo
2025
normal zo
2067
normal zo
2072
normal zo
2083
normal zo
2085
normal zo
2093
normal zo
2101
normal zo
2110
normal zo
2117
normal zo
2120
normal zo
2117
normal zo
2130
normal zo
2133
normal zo
2130
normal zo
2140
normal zo
2083
normal zo
2147
normal zo
2153
normal zo
2162
normal zo
2169
normal zo
2147
normal zo
2181
normal zo
2184
normal zo
2181
normal zo
2189
normal zo
2196
normal zo
2067
normal zo
2207
normal zo
2277
normal zo
2281
normal zo
2292
normal zo
2294
normal zo
2297
normal zo
2303
normal zo
2305
normal zo
2303
normal zo
2294
normal zo
2316
normal zo
2292
normal zo
2328
normal zo
2330
normal zo
2337
normal zo
2343
normal zo
2345
normal zo
2349
normal zo
2343
normal zo
2328
normal zo
2359
normal zo
2369
normal zo
2372
normal zo
2369
normal zo
2384
normal zo
2277
normal zo
2396
normal zo
2408
normal zo
2415
normal zo
2422
normal zo
2432
normal zo
2445
normal zo
2408
normal zo
2457
normal zo
2461
normal zo
2491
normal zo
2496
normal zo
2508
normal zo
2512
normal zo
2508
normal zo
2518
normal zo
2523
normal zo
2525
normal zo
2527
normal zo
2529
normal zo
2531
normal zo
2533
normal zo
2540
normal zo
2543
normal zo
2540
normal zo
2531
normal zo
2529
normal zo
2555
normal zo
2560
normal zo
2562
normal zo
2560
normal zo
2555
normal zo
2572
normal zo
2527
normal zo
2525
normal zo
2583
normal zo
2523
normal zo
2457
normal zo
2594
normal zo
2603
normal zo
2608
normal zo
2633
normal zo
2638
normal zo
2649
normal zo
2653
normal zo
2659
normal zo
2649
normal zo
2664
normal zo
2669
normal zo
2671
normal zo
2673
normal zo
2675
normal zo
2677
normal zo
2679
normal zo
2685
normal zo
2691
normal zo
2677
normal zo
2675
normal zo
2700
normal zo
2704
normal zo
2706
normal zo
2704
normal zo
2700
normal zo
2715
normal zo
2673
normal zo
2671
normal zo
2725
normal zo
2669
normal zo
2594
normal zo
2737
normal zo
2746
normal zo
2751
normal zo
2776
normal zo
2781
normal zo
2792
normal zo
2796
normal zo
2801
normal zo
2792
normal zo
2806
normal zo
2812
normal zo
2814
normal zo
2816
normal zo
2818
normal zo
2822
normal zo
2824
normal zo
2830
normal zo
2838
normal zo
2822
normal zo
2818
normal zo
2846
normal zo
2851
normal zo
2853
normal zo
2851
normal zo
2846
normal zo
2862
normal zo
2816
normal zo
2814
normal zo
2872
normal zo
2812
normal zo
2737
normal zo
2884
normal zo
2887
normal zo
2918
normal zo
2923
normal zo
2935
normal zo
2939
normal zo
2935
normal zo
2945
normal zo
2951
normal zo
2953
normal zo
2955
normal zo
2957
normal zo
2960
normal zo
2962
normal zo
2968
normal zo
2971
normal zo
2968
normal zo
2960
normal zo
2957
normal zo
2983
normal zo
2988
normal zo
2990
normal zo
2988
normal zo
2983
normal zo
2998
normal zo
2955
normal zo
2953
normal zo
3009
normal zo
2951
normal zo
2884
normal zo
3020
normal zo
3026
normal zo
3041
normal zo
3026
normal zo
3020
normal zo
3055
normal zo
3057
normal zo
3059
normal zo
3057
normal zo
3055
normal zo
3067
normal zo
3069
normal zo
3076
normal zo
3080
normal zo
3067
normal zo
3086
normal zo
3088
normal zo
3091
normal zo
3088
normal zo
3098
normal zo
3086
normal zo
3107
normal zo
3118
normal zo
3125
normal zo
3107
normal zo
3137
normal zo
3141
normal zo
3169
normal zo
3137
normal zo
3179
normal zo
3183
normal zo
3195
normal zo
3207
normal zo
3210
normal zo
3212
normal zo
3216
normal zo
3233
normal zo
3210
normal zo
3242
normal zo
3250
normal zo
3254
normal zo
3242
normal zo
3269
normal zo
3273
normal zo
3277
normal zo
3279
normal zo
3277
normal zo
3285
normal zo
3302
normal zo
3273
normal zo
3269
normal zo
3311
normal zo
3315
normal zo
3319
normal zo
3321
normal zo
3319
normal zo
3328
normal zo
3315
normal zo
3334
normal zo
3350
normal zo
3354
normal zo
3311
normal zo
3363
normal zo
3364
normal zo
3374
normal zo
3376
normal zo
3380
normal zo
3374
normal zo
3396
normal zo
3363
normal zo
3207
normal zo
3179
normal zo
3408
normal zo
3418
normal zo
3432
normal zo
3440
normal zo
3471
normal zo
3473
normal zo
3471
normal zo
3479
normal zo
3500
normal zo
3504
normal zo
3440
normal zo
3408
normal zo
3518
normal zo
3520
normal zo
3518
normal zo
3541
normal zo
3548
normal zo
3553
normal zo
3560
normal zo
3571
normal zo
3586
normal zo
3606
normal zo
3560
normal zo
3553
normal zo
3541
normal zo
3674
normal zo
3816
normal zo
3824
normal zo
3826
normal zo
3824
normal zo
3950
normal zo
3952
normal zo
3950
normal zo
4032
normal zo
4037
normal zo
4042
normal zo
4051
normal zo
4053
normal zo
4081
normal zo
4086
normal zo
4081
normal zo
4106
normal zo
4108
normal zo
4110
normal zo
4130
normal zo
4135
normal zo
4130
normal zo
4154
normal zo
4159
normal zo
4175
normal zo
4154
normal zo
4108
normal zo
4106
normal zo
4187
normal zo
4207
normal zo
4051
normal zo
3816
normal zo
4232
normal zo
4244
normal zo
4261
normal zo
4265
normal zo
4268
normal zo
4272
normal zo
4265
normal zo
4279
normal zo
4244
normal zo
4343
normal zo
4345
normal zo
4357
normal zo
4363
normal zo
4365
normal zo
4371
normal zo
4375
normal zo
4383
normal zo
4387
normal zo
4383
normal zo
4397
normal zo
4365
normal zo
4363
normal zo
4412
normal zo
4414
normal zo
4416
normal zo
4426
normal zo
4414
normal zo
4432
normal zo
4412
normal zo
4343
normal zo
4441
normal zo
4450
normal zo
4463
normal zo
4477
normal zo
4482
normal zo
4463
normal zo
4496
normal zo
4505
normal zo
4509
normal zo
4531
normal zo
4537
normal zo
4543
normal zo
4441
normal zo
4554
normal zo
4562
normal zo
4564
normal zo
4569
normal zo
4562
normal zo
4575
normal zo
4577
normal zo
4582
normal zo
4575
normal zo
4592
normal zo
4602
normal zo
4554
normal zo
4612
normal zo
4653
normal zo
4656
normal zo
4660
normal zo
4653
normal zo
4668
normal zo
4679
normal zo
4683
normal zo
4697
normal zo
4708
normal zo
4718
normal zo
4728
normal zo
4738
normal zo
4747
normal zo
4769
normal zo
4773
normal zo
4778
normal zo
4779
normal zo
4778
normal zo
4798
normal zo
4800
normal zo
4804
normal zo
4798
normal zo
4769
normal zo
4810
normal zo
4668
normal zo
4819
normal zo
4827
normal zo
4834
normal zo
4819
normal zo
4855
normal zo
4859
normal zo
4863
normal zo
4871
normal zo
4863
normal zo
4855
normal zo
4887
normal zo
4894
normal zo
4908
normal zo
4927
normal zo
4936
normal zo
4948
normal zo
4955
normal zo
4957
normal zo
4966
normal zo
4955
normal zo
4977
normal zo
4979
normal zo
4988
normal zo
4997
normal zo
4977
normal zo
5010
normal zo
5012
normal zo
5016
normal zo
5010
normal zo
5021
normal zo
5023
normal zo
5027
normal zo
5021
normal zo
5036
normal zo
5046
normal zo
4887
normal zo
5064
normal zo
5076
normal zo
5089
normal zo
5093
normal zo
5100
normal zo
5111
normal zo
5115
normal zo
5120
normal zo
5125
normal zo
5100
normal zo
5141
normal zo
5147
normal zo
5151
normal zo
5156
normal zo
5161
normal zo
5064
normal zo
5170
normal zo
5172
normal zo
5191
normal zo
5204
normal zo
5207
normal zo
5211
normal zo
5204
normal zo
5216
normal zo
5219
normal zo
5223
normal zo
5216
normal zo
5229
normal zo
5234
normal zo
5239
normal zo
5229
normal zo
5245
normal zo
5250
normal zo
5255
normal zo
5245
normal zo
5263
normal zo
5271
normal zo
5273
normal zo
5279
normal zo
5271
normal zo
5286
normal zo
5170
normal zo
5295
normal zo
5303
normal zo
5315
normal zo
5321
normal zo
5330
normal zo
5337
normal zo
5321
normal zo
5349
normal zo
5295
normal zo
5359
normal zo
5363
normal zo
5367
normal zo
5363
normal zo
5375
normal zo
5412
normal zo
5415
normal zo
5419
normal zo
5412
normal zo
5359
normal zo
5429
normal zo
let s:l = 3213 - ((13 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
3213
normal! 036l
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
