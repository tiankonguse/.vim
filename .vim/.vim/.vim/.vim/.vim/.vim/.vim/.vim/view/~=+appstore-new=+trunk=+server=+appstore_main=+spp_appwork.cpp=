let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <S-F2> :A
imap <buffer> <silent> <S-F9> :call C_Arguments()
imap <buffer> <silent> <C-F9> :call C_Run()
imap <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
imap <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
nmap <buffer> <silent> <NL> i=C_JumpCtrlJ()
vnoremap <buffer> /* s/*  */<Left><Left><Left>p
inoremap <buffer> <silent> Â­ =EchoFuncP()
inoremap <buffer> <silent> Â½ =EchoFuncN()
nmap <buffer> <silent> \rh :call C_Hardcopy()
nnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
nnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
nnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
nnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
nnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
nnoremap <buffer> <silent> \np :call C_ProtoPick("function")
nnoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
nnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
nnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
nnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
nnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
nnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
nnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
nnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
nnoremap <buffer> <silent> \in :call C_CodeFor("down")
nnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
nnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
nnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
nnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
nnoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
nnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
nnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
nnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
nnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
nnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
nnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
nnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
nnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
nnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
nnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
nnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
nnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
nnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
nnoremap <buffer> <silent> \cx :call C_CommentToggle( )
nnoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
nnoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
nnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
nnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
nnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
nnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
map <buffer> <silent> \hm :call C_Help("m")
map <buffer> <silent> \hp :call C_HelpCsupport()
map <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
map <buffer> <silent> \rx :call C_XtermSize()
vmap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rs :call C_Settings()
omap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rd :call C_Indent()
map <buffer> <silent> \rpa :call C_SplintArguments()
map <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
map <buffer> <silent> \rma :call C_MakeArguments()
map <buffer> <silent> \rme :call C_MakeExeToRun()
map <buffer> <silent> \rmc :call C_MakeClean()
map <buffer> <silent> \rcm :call C_ChooseMakefile()
map <buffer> <silent> \rm :call C_Make()
map <buffer> <silent> \ra :call C_Arguments()
map <buffer> <silent> \rr :call C_Run()
map <buffer> <silent> \rl :call C_Link():call C_HlMessage()
map <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
vnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points", "v")
onoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
vnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch", "v")
onoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
vnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch", "v")
onoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
noremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
noremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
noremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
noremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
noremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
noremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
noremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
noremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
noremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
noremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
noremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
noremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
noremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
noremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
noremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
noremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
noremap <buffer> \nts :CStyle 
noremap <buffer> <silent> \ntr :call C_RereadTemplates()
noremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
noremap <buffer> <silent> \ns :call C_ProtoShow()
noremap <buffer> <silent> \nc :call C_ProtoClear()
noremap <buffer> <silent> \ni :call C_ProtoInsert()
vnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
onoremap <buffer> <silent> \nm :call C_ProtoPick("method")
vnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
onoremap <buffer> <silent> \nf :call C_ProtoPick("function")
vnoremap <buffer> <silent> \np :call C_ProtoPick("function")
onoremap <buffer> <silent> \np :call C_ProtoPick("function")
noremap <buffer> <silent> \ne :call C_CodeSnippet("e")
vnoremap <buffer> <silent> \nw :call C_CodeSnippet("wv")
onoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
noremap <buffer> <silent> \nr :call C_CodeSnippet("r")
noremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
noremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
vnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file", "v")
onoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
vnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file", "v")
onoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
vnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert", "v")
onoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
vnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof", "v")
onoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
noremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
noremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
noremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
noremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
noremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
vnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union" , "v")
onoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
vnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct", "v")
onoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
vnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum"  , "v")
onoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
vnoremap <buffer> <silent> \in :call C_CodeFor("down")
onoremap <buffer> <silent> \in :call C_CodeFor("down")
vnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
onoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
vnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main", "v")
onoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
vnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static", "v")
onoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
vnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function", "v")
onoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
noremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
noremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
noremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
noremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
vnoremap <buffer> <silent> \pi0 :call C_PPIf0("v")
onoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
vnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif", "v")
vnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif", "v")
vnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif", "v")
vnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif", "v")
vnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif", "v")
onoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
onoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
onoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
onoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
onoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
noremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
noremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
noremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
noremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
noremap <buffer> \+pc :IncludeCppCLibrary 
noremap <buffer> \+ps :IncludeCppLibrary 
noremap <buffer> \pc :IncludeC99Library 
noremap <buffer> \ps :IncludeStdLibrary 
vnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
vnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
noremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
vnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch", "v")
onoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
vnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block", "v")
onoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
noremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
vnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block", "v")
onoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
vnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else", "v")
onoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
vnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else", "v")
onoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
vnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block", "v")
onoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
noremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
vnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block", "v")
onoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
noremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
vnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while", "v")
onoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
noremap <buffer> \csc :SpecialComment 
noremap <buffer> \ckc :KeywordComment 
noremap <buffer> \chs :HFileSection 
noremap <buffer> \ccs :CFileSection 
vnoremap <buffer> <silent> \cx :call C_CommentToggle( )
onoremap <buffer> <silent> \cx :call C_CommentToggle( )
vnoremap <buffer> <silent> \ct s:call C_InsertDateAndTime('dt')a
onoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
vnoremap <buffer> <silent> \cd s:call C_InsertDateAndTime('d')a
onoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
noremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
noremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
noremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
noremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
noremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
noremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
vnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
onoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
vnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
onoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
vnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
onoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
noremap <buffer> <silent> \cs :call C_GetLineEndCommCol()
vnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
nnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
vnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
onoremap <buffer> <silent> \cl :call C_EndOfLineComment()
vnoremap <buffer> { S{}Pk=iB
map <buffer> <silent> <S-F2> :A
map <buffer> <silent> <S-F9> :call C_Arguments()
map <buffer> <silent> <C-F9> :call C_Run()
map <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
map <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
inoremap <buffer> 	 =CodeComplete()=SwitchRegion()
imap <buffer> <silent> <NL> =C_JumpCtrlJ()
inoremap <buffer> <silent> ( (=EchoFunc()
inoremap <buffer> <silent> ) =EchoFuncClear())
inoremap <buffer> /* /*/kA 
inoremap <buffer> /* /*  */<Left><Left><Left>
imap <buffer> <silent> \hm :call C_Help("m")
imap <buffer> <silent> \hp :call C_HelpCsupport()
imap <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
imap <buffer> <silent> \rx :call C_XtermSize()
imap <buffer> <silent> \rs :call C_Settings()
imap <buffer> <silent> \rh :call C_Hardcopy()
imap <buffer> <silent> \rd :call C_Indent()
imap <buffer> <silent> \rpa :call C_SplintArguments()
imap <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
imap <buffer> <silent> \rma :call C_MakeArguments()
imap <buffer> <silent> \rme :call C_MakeExeToRun()
imap <buffer> <silent> \rmc :call C_MakeClean()
imap <buffer> <silent> \rm :call C_Make()
imap <buffer> <silent> \ra :call C_Arguments()
imap <buffer> <silent> \rr :call C_Run()
imap <buffer> <silent> \rl :call C_Link():call C_HlMessage()
imap <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
inoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
inoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
inoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
inoremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
inoremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
inoremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
inoremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
inoremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
inoremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
inoremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
inoremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
inoremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
inoremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
inoremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
inoremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
inoremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
inoremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
inoremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
inoremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
inoremap <buffer> \nts :CStyle 
inoremap <buffer> <silent> \ntr :call C_RereadTemplates()
inoremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
inoremap <buffer> <silent> \ns :call C_ProtoShow()
inoremap <buffer> <silent> \nc :call C_ProtoClear()
inoremap <buffer> <silent> \ni :call C_ProtoInsert()
inoremap <buffer> <silent> \nm :call C_ProtoPick("method")
inoremap <buffer> <silent> \nf :call C_ProtoPick("function")
inoremap <buffer> <silent> \np :call C_ProtoPick("function")
inoremap <buffer> <silent> \ne :call C_CodeSnippet("e")
inoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
inoremap <buffer> <silent> \nr :call C_CodeSnippet("r")
inoremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
inoremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
inoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
inoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
inoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
inoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
inoremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
inoremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
inoremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
inoremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
inoremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
inoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
inoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
inoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
inoremap <buffer> <silent> \in :call C_CodeFor("down")i
inoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )i
inoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
inoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
inoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
inoremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
inoremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
inoremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
inoremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
inoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
inoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
inoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
inoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
inoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
inoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
inoremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
inoremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
inoremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
inoremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
inoremap <buffer> \+pc :IncludeCppC9Library 
inoremap <buffer> \+ps :IncludeCppLibrary 
inoremap <buffer> \pc :IncludeC99Library 
inoremap <buffer> \ps :IncludeStdLibrary 
inoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
inoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
inoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
inoremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
inoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
inoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
inoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
inoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
inoremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
inoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
inoremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
inoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
inoremap <buffer> \csc :SpecialComment 
inoremap <buffer> \ckc :KeywordComment 
inoremap <buffer> \chs :HFileSection 
inoremap <buffer> \ccs :CFileSection 
inoremap <buffer> <silent> \cx :call C_CommentToggle( )
inoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')a
inoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')a
inoremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
inoremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
inoremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
inoremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
inoremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
inoremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
inoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()a
inoremap <buffer> <silent> \cl :call C_EndOfLineComment()
inoremap <buffer> { {}O
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=:0g0t0(sus
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=~/.vim/c-support/wordlists/c-c++-keywords.list,~/.vim/c-support/wordlists/k+r.list,~/.vim/c-support/wordlists/stl_index.list
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal foldcolumn=3
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=omni#cpp#complete#Main
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
1154
normal zo
1171
normal zo
1172
normal zo
1177
normal zo
1180
normal zo
1177
normal zo
1191
normal zo
1196
normal zo
1191
normal zo
1204
normal zo
1171
normal zo
1215
normal zo
1294
normal zo
1305
normal zo
1305
normal zo
1294
normal zo
1215
normal zo
1154
normal zo
1458
normal zo
1458
normal zo
1546
normal zo
1567
normal zo
1546
normal zo
1586
normal zo
1613
normal zo
1586
normal zo
1625
normal zo
1648
normal zo
1654
normal zo
1625
normal zo
1666
normal zo
1687
normal zo
1691
normal zo
1698
normal zo
1704
normal zo
1666
normal zo
1715
normal zo
1746
normal zo
1753
normal zo
1715
normal zo
1760
normal zo
1786
normal zo
1790
normal zo
1803
normal zo
1810
normal zo
1760
normal zo
1818
normal zo
1878
normal zo
1884
normal zo
1900
normal zo
1906
normal zo
1918
normal zo
1933
normal zo
1939
normal zo
1952
normal zo
1963
normal zo
1967
normal zo
1963
normal zo
1973
normal zo
1978
normal zo
1984
normal zo
1993
normal zo
1999
normal zo
1952
normal zo
1818
normal zo
2020
normal zo
2024
normal zo
2048
normal zo
2052
normal zo
2063
normal zo
2072
normal zo
2078
normal zo
2089
normal zo
2092
normal zo
2098
normal zo
2102
normal zo
2089
normal zo
2020
normal zo
2113
normal zo
2121
normal zo
2139
normal zo
2177
normal zo
2185
normal zo
2193
normal zo
2196
normal zo
2193
normal zo
2205
normal zo
2208
normal zo
2214
normal zo
2220
normal zo
2205
normal zo
2121
normal zo
2113
normal zo
2232
normal zo
2252
normal zo
2260
normal zo
2274
normal zo
2278
normal zo
2282
normal zo
2278
normal zo
2274
normal zo
2289
normal zo
2293
normal zo
2297
normal zo
2293
normal zo
2289
normal zo
2232
normal zo
2314
normal zo
2335
normal zo
2362
normal zo
2376
normal zo
2380
normal zo
2384
normal zo
2380
normal zo
2376
normal zo
2391
normal zo
2395
normal zo
2399
normal zo
2395
normal zo
2391
normal zo
2335
normal zo
2417
normal zo
2422
normal zo
2425
normal zo
2429
normal zo
2422
normal zo
2417
normal zo
2437
normal zo
2439
normal zo
2451
normal zo
2471
normal zo
2481
normal zo
2451
normal zo
2437
normal zo
2494
normal zo
2496
normal zo
2507
normal zo
2527
normal zo
2562
normal zo
2570
normal zo
2578
normal zo
2581
normal zo
2578
normal zo
2590
normal zo
2593
normal zo
2599
normal zo
2605
normal zo
2590
normal zo
2507
normal zo
2494
normal zo
2616
normal zo
2625
normal zo
2644
normal zo
2681
normal zo
2689
normal zo
2697
normal zo
2700
normal zo
2697
normal zo
2709
normal zo
2712
normal zo
2718
normal zo
2724
normal zo
2709
normal zo
2625
normal zo
2616
normal zo
2735
normal zo
2737
normal zo
2747
normal zo
2758
normal zo
2783
normal zo
2758
normal zo
2735
normal zo
2804
normal zo
2834
normal zo
2856
normal zo
2862
normal zo
2834
normal zo
2804
normal zo
2879
normal zo
2899
normal zo
2910
normal zo
2914
normal zo
2910
normal zo
2919
normal zo
2939
normal zo
2943
normal zo
2939
normal zo
2948
normal zo
2952
normal zo
2948
normal zo
2961
normal zo
2879
normal zo
2981
normal zo
3008
normal zo
3023
normal zo
3027
normal zo
3031
normal zo
3027
normal zo
3023
normal zo
3038
normal zo
3042
normal zo
3046
normal zo
3042
normal zo
3038
normal zo
2981
normal zo
3065
normal zo
3084
normal zo
3104
normal zo
3117
normal zo
3124
normal zo
3117
normal zo
3084
normal zo
3065
normal zo
3142
normal zo
3154
normal zo
3165
normal zo
3180
normal zo
3154
normal zo
3142
normal zo
3189
normal zo
3200
normal zo
3202
normal zo
3205
normal zo
3202
normal zo
3210
normal zo
3213
normal zo
3210
normal zo
3200
normal zo
3219
normal zo
3222
normal zo
3219
normal zo
3238
normal zo
3241
normal zo
3238
normal zo
3253
normal zo
3262
normal zo
3189
normal zo
3269
normal zo
3280
normal zo
3282
normal zo
3285
normal zo
3282
normal zo
3290
normal zo
3293
normal zo
3290
normal zo
3280
normal zo
3299
normal zo
3302
normal zo
3299
normal zo
3318
normal zo
3321
normal zo
3318
normal zo
3333
normal zo
3341
normal zo
3269
normal zo
3352
normal zo
3366
normal zo
3387
normal zo
3394
normal zo
3403
normal zo
3407
normal zo
3414
normal zo
3352
normal zo
3423
normal zo
3437
normal zo
3462
normal zo
3471
normal zo
3481
normal zo
3485
normal zo
3493
normal zo
3423
normal zo
3502
normal zo
3517
normal zo
3520
normal zo
3517
normal zo
3548
normal zo
3556
normal zo
3502
normal zo
3569
normal zo
3573
normal zo
3569
normal zo
3582
normal zo
3586
normal zo
3582
normal zo
3595
normal zo
3599
normal zo
3595
normal zo
3608
normal zo
3612
normal zo
3608
normal zo
3621
normal zo
3625
normal zo
3621
normal zo
3634
normal zo
3638
normal zo
3634
normal zo
3647
normal zo
3651
normal zo
3647
normal zo
3659
normal zo
3662
normal zo
3696
normal zo
3703
normal zo
3710
normal zo
3717
normal zo
3662
normal zo
3740
normal zo
3759
normal zo
3766
normal zo
3773
normal zo
3779
normal zo
3740
normal zo
3795
normal zo
3814
normal zo
3820
normal zo
3827
normal zo
3833
normal zo
3795
normal zo
3850
normal zo
3856
normal zo
3858
normal zo
3870
normal zo
3874
normal zo
3870
normal zo
3882
normal zo
3856
normal zo
3850
normal zo
3893
normal zo
3900
normal zo
3914
normal zo
3921
normal zo
3926
normal zo
3928
normal zo
3933
normal zo
3937
normal zo
3933
normal zo
3926
normal zo
3961
normal zo
3968
normal zo
3972
normal zo
3968
normal zo
3981
normal zo
3988
normal zo
3991
normal zo
3988
normal zo
3998
normal zo
4001
normal zo
3998
normal zo
3893
normal zo
4009
normal zo
4020
normal zo
4038
normal zo
4042
normal zo
4053
normal zo
4042
normal zo
4038
normal zo
4089
normal zo
4092
normal zo
4089
normal zo
4098
normal zo
4100
normal zo
4098
normal zo
4113
normal zo
4120
normal zo
4113
normal zo
4020
normal zo
4134
normal zo
4150
normal zo
4156
normal zo
4170
normal zo
4173
normal zo
4178
normal zo
4170
normal zo
4184
normal zo
4188
normal zo
4205
normal zo
4210
normal zo
4184
normal zo
4134
normal zo
4223
normal zo
4239
normal zo
4245
normal zo
4256
normal zo
4262
normal zo
4266
normal zo
4273
normal zo
4262
normal zo
4283
normal zo
4288
normal zo
4283
normal zo
4256
normal zo
4223
normal zo
4308
normal zo
4323
normal zo
4330
normal zo
4343
normal zo
4347
normal zo
4354
normal zo
4343
normal zo
4362
normal zo
4368
normal zo
4373
normal zo
4368
normal zo
4308
normal zo
4391
normal zo
4393
normal zo
4401
normal zo
4406
normal zo
4411
normal zo
4420
normal zo
4426
normal zo
4433
normal zo
4391
normal zo
4444
normal zo
4448
normal zo
4458
normal zo
4467
normal zo
4471
normal zo
4467
normal zo
4484
normal zo
4494
normal zo
4503
normal zo
4506
normal zo
4510
normal zo
4506
normal zo
4503
normal zo
4448
normal zo
4522
normal zo
4529
normal zo
4522
normal zo
4547
normal zo
4548
normal zo
4559
normal zo
4563
normal zo
4567
normal zo
4579
normal zo
4583
normal zo
4589
normal zo
4590
normal zo
4589
normal zo
4633
normal zo
4638
normal zo
4703
normal zo
4708
normal zo
4723
normal zo
4726
normal zo
4732
normal zo
4734
normal zo
4736
normal zo
4741
normal zo
4747
normal zo
4752
normal zo
4734
normal zo
4757
normal zo
4732
normal zo
4723
normal zo
4769
normal zo
4770
normal zo
4777
normal zo
4783
normal zo
4769
normal zo
4790
normal zo
4796
normal zo
4547
normal zo
4810
normal zo
4815
normal zo
4825
normal zo
4834
normal zo
4844
normal zo
4853
normal zo
4834
normal zo
4810
normal zo
4867
normal zo
4876
normal zo
4888
normal zo
4890
normal zo
4892
normal zo
4896
normal zo
4890
normal zo
4888
normal zo
4867
normal zo
4907
normal zo
4911
normal zo
4935
normal zo
4940
normal zo
4944
normal zo
4948
normal zo
4957
normal zo
4961
normal zo
4966
normal zo
4975
normal zo
4966
normal zo
4961
normal zo
4957
normal zo
4986
normal zo
4994
normal zo
4998
normal zo
5005
normal zo
5015
normal zo
5017
normal zo
5019
normal zo
5022
normal zo
5025
normal zo
5033
normal zo
5038
normal zo
5043
normal zo
5046
normal zo
5053
normal zo
5057
normal zo
5060
normal zo
5063
normal zo
5070
normal zo
5072
normal zo
5070
normal zo
5060
normal zo
5083
normal zo
5086
normal zo
5093
normal zo
5083
normal zo
5100
normal zo
5057
normal zo
5053
normal zo
5019
normal zo
5017
normal zo
5015
normal zo
5122
normal zo
5219
normal zo
5222
normal zo
5225
normal zo
5233
normal zo
5238
normal zo
5243
normal zo
5246
normal zo
5253
normal zo
5257
normal zo
5260
normal zo
5267
normal zo
5271
normal zo
5267
normal zo
5278
normal zo
5257
normal zo
5253
normal zo
5219
normal zo
5122
normal zo
5291
normal zo
5304
normal zo
5309
normal zo
5312
normal zo
5316
normal zo
5324
normal zo
5328
normal zo
5312
normal zo
5334
normal zo
5309
normal zo
5347
normal zo
5352
normal zo
5355
normal zo
5359
normal zo
5367
normal zo
5371
normal zo
5355
normal zo
5376
normal zo
5352
normal zo
5005
normal zo
5383
normal zo
5392
normal zo
5394
normal zo
5398
normal zo
5400
normal zo
5404
normal zo
5408
normal zo
5412
normal zo
5416
normal zo
5418
normal zo
5416
normal zo
5447
normal zo
5452
normal zo
5447
normal zo
5412
normal zo
5487
normal zo
5491
normal zo
5494
normal zo
5497
normal zo
5504
normal zo
5506
normal zo
5504
normal zo
5494
normal zo
5516
normal zo
5519
normal zo
5526
normal zo
5516
normal zo
5534
normal zo
5539
normal zo
5545
normal zo
5547
normal zo
5545
normal zo
5534
normal zo
5574
normal zo
5579
normal zo
5585
normal zo
5574
normal zo
5590
normal zo
5591
normal zo
5598
normal zo
5603
normal zo
5607
normal zo
5590
normal zo
5612
normal zo
5614
normal zo
5612
normal zo
5491
normal zo
5487
normal zo
5398
normal zo
5394
normal zo
5392
normal zo
5635
normal zo
5717
normal zo
5734
normal zo
5737
normal zo
5742
normal zo
5747
normal zo
5750
normal zo
5758
normal zo
5761
normal zo
5758
normal zo
5790
normal zo
5794
normal zo
5796
normal zo
5803
normal zo
5807
normal zo
5803
normal zo
5815
normal zo
5824
normal zo
5831
normal zo
5834
normal zo
5836
normal zo
5834
normal zo
5863
normal zo
5867
normal zo
5876
normal zo
5880
normal zo
5831
normal zo
5815
normal zo
5886
normal zo
5794
normal zo
5790
normal zo
5734
normal zo
5635
normal zo
5898
normal zo
5911
normal zo
5918
normal zo
5921
normal zo
5925
normal zo
5933
normal zo
5937
normal zo
5921
normal zo
5943
normal zo
5918
normal zo
5955
normal zo
5960
normal zo
5963
normal zo
5967
normal zo
5975
normal zo
5979
normal zo
5963
normal zo
5984
normal zo
5960
normal zo
5383
normal zo
4935
normal zo
5995
normal zo
5999
normal zo
6001
normal zo
6003
normal zo
6005
normal zo
6011
normal zo
6015
normal zo
6011
normal zo
6005
normal zo
6022
normal zo
6028
normal zo
6032
normal zo
6028
normal zo
6022
normal zo
6003
normal zo
6040
normal zo
6046
normal zo
6050
normal zo
6046
normal zo
6040
normal zo
6001
normal zo
5999
normal zo
5995
normal zo
6067
normal zo
6074
normal zo
6090
normal zo
6097
normal zo
6103
normal zo
6110
normal zo
6122
normal zo
6126
normal zo
6074
normal zo
6132
normal zo
6137
normal zo
6146
normal zo
6159
normal zo
6168
normal zo
6174
normal zo
6181
normal zo
6188
normal zo
6195
normal zo
6203
normal zo
6132
normal zo
6213
normal zo
6219
normal zo
6226
normal zo
6236
normal zo
6239
normal zo
6236
normal zo
6213
normal zo
6253
normal zo
6258
normal zo
6265
normal zo
6253
normal zo
6275
normal zo
6283
normal zo
6289
normal zo
6294
normal zo
6299
normal zo
6301
normal zo
6299
normal zo
6329
normal zo
6334
normal zo
6344
normal zo
6347
normal zo
6355
normal zo
6344
normal zo
6369
normal zo
6375
normal zo
6378
normal zo
6386
normal zo
6389
normal zo
6393
normal zo
6389
normal zo
6386
normal zo
6375
normal zo
6401
normal zo
6403
normal zo
6401
normal zo
6275
normal zo
6413
normal zo
let s:l = 1563 - ((63 * winheight(0) + 23) / 46)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1563
normal! 01l
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
