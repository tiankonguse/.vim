let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <S-F2> :A
imap <buffer> <silent> <S-F9> :call C_Arguments()
imap <buffer> <silent> <C-F9> :call C_Run()
imap <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
imap <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
nmap <buffer> <silent> <NL> i=C_JumpCtrlJ()
vnoremap <buffer> /* s/*  */<Left><Left><Left>p
inoremap <buffer> <silent> Â­ =EchoFuncP()
inoremap <buffer> <silent> Â½ =EchoFuncN()
nnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
nnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
nnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
nnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
nnoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
nnoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
nnoremap <buffer> <silent> \cx :call C_CommentToggle( )
nnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
nnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
nnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
nnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
nnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
nnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
nnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
nnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
nnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
nnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
nnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
nnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
nnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
nnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
nnoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
nnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
nnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
nnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
nnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
nnoremap <buffer> <silent> \in :call C_CodeFor("down")
nnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
nnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
nnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
nnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
nnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
nnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
nnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
nnoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
nnoremap <buffer> <silent> \np :call C_ProtoPick("function")
nnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
nnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
nnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
nnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
nnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
nmap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \hm :call C_Help("m")
map <buffer> <silent> \hp :call C_HelpCsupport()
map <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
map <buffer> <silent> \rx :call C_XtermSize()
vmap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rs :call C_Settings()
omap <buffer> <silent> \rh :call C_Hardcopy()
map <buffer> <silent> \rd :call C_Indent()
map <buffer> <silent> \rpa :call C_SplintArguments()
map <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
map <buffer> <silent> \rma :call C_MakeArguments()
map <buffer> <silent> \rme :call C_MakeExeToRun()
map <buffer> <silent> \rmc :call C_MakeClean()
map <buffer> <silent> \rcm :call C_ChooseMakefile()
map <buffer> <silent> \rm :call C_Make()
map <buffer> <silent> \ra :call C_Arguments()
map <buffer> <silent> \rr :call C_Run()
map <buffer> <silent> \rl :call C_Link():call C_HlMessage()
map <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
vnoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points", "v")
onoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
vnoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch", "v")
onoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
vnoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch", "v")
onoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
noremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
noremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
noremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
noremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
noremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
noremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
noremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
noremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
noremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
noremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
noremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
noremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
noremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
noremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
noremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
noremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
noremap <buffer> \nts :CStyle 
noremap <buffer> <silent> \ntr :call C_RereadTemplates()
noremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
noremap <buffer> <silent> \ns :call C_ProtoShow()
noremap <buffer> <silent> \nc :call C_ProtoClear()
noremap <buffer> <silent> \ni :call C_ProtoInsert()
vnoremap <buffer> <silent> \nm :call C_ProtoPick("method")
onoremap <buffer> <silent> \nm :call C_ProtoPick("method")
vnoremap <buffer> <silent> \nf :call C_ProtoPick("function")
onoremap <buffer> <silent> \nf :call C_ProtoPick("function")
vnoremap <buffer> <silent> \np :call C_ProtoPick("function")
onoremap <buffer> <silent> \np :call C_ProtoPick("function")
noremap <buffer> <silent> \ne :call C_CodeSnippet("e")
vnoremap <buffer> <silent> \nw :call C_CodeSnippet("wv")
onoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
noremap <buffer> <silent> \nr :call C_CodeSnippet("r")
noremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
noremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
vnoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file", "v")
onoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
vnoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file", "v")
onoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
vnoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert", "v")
onoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
vnoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof", "v")
onoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
noremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
noremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
noremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
noremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
noremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
vnoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union" , "v")
onoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
vnoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct", "v")
onoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
vnoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum"  , "v")
onoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
vnoremap <buffer> <silent> \in :call C_CodeFor("down")
onoremap <buffer> <silent> \in :call C_CodeFor("down")
vnoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
onoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )
vnoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main", "v")
onoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
vnoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static", "v")
onoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
vnoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function", "v")
onoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
noremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
noremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
noremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
noremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
vnoremap <buffer> <silent> \pi0 :call C_PPIf0("v")
onoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
vnoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif", "v")
vnoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif", "v")
vnoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif", "v")
vnoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif", "v")
vnoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif", "v")
onoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
onoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
onoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
onoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
onoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
noremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
noremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
noremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
noremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
noremap <buffer> \+pc :IncludeCppCLibrary 
noremap <buffer> \+ps :IncludeCppLibrary 
noremap <buffer> \pc :IncludeC99Library 
noremap <buffer> \ps :IncludeStdLibrary 
vnoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
vnoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block", "v")
onoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
noremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
vnoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch", "v")
onoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
vnoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block", "v")
onoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
noremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
vnoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block", "v")
onoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
vnoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else", "v")
onoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
vnoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else", "v")
onoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
vnoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block", "v")
onoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
noremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
vnoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block", "v")
onoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
noremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
vnoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while", "v")
onoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
noremap <buffer> \csc :SpecialComment 
noremap <buffer> \ckc :KeywordComment 
noremap <buffer> \chs :HFileSection 
noremap <buffer> \ccs :CFileSection 
vnoremap <buffer> <silent> \cx :call C_CommentToggle( )
onoremap <buffer> <silent> \cx :call C_CommentToggle( )
vnoremap <buffer> <silent> \ct s:call C_InsertDateAndTime('dt')a
onoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')
vnoremap <buffer> <silent> \cd s:call C_InsertDateAndTime('d')a
onoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')
noremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
noremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
noremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
noremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
noremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
noremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
vnoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
onoremap <buffer> <silent> \co :call C_CommentToCode():nohlsearch
vnoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
onoremap <buffer> <silent> \cc :call C_CodeToCommentCpp():nohlsearchj
vnoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
onoremap <buffer> <silent> \c* :call C_CodeToCommentC():nohlsearchj
noremap <buffer> <silent> \cs :call C_GetLineEndCommCol()
vnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
nnoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()
vnoremap <buffer> <silent> \cl :call C_EndOfLineComment()
onoremap <buffer> <silent> \cl :call C_EndOfLineComment()
vnoremap <buffer> { S{}Pk=iB
map <buffer> <silent> <S-F2> :A
map <buffer> <silent> <S-F9> :call C_Arguments()
map <buffer> <silent> <C-F9> :call C_Run()
map <buffer> <silent> <F9> :call C_Link():call C_HlMessage()
map <buffer> <silent> <M-F9> :call C_Compile():call C_HlMessage()
inoremap <buffer> 	 =CodeComplete()=SwitchRegion()
imap <buffer> <silent> <NL> =C_JumpCtrlJ()
inoremap <buffer> <silent> ( (=EchoFunc()
inoremap <buffer> <silent> ) =EchoFuncClear())
inoremap <buffer> /* /*/kA 
inoremap <buffer> /* /*  */<Left><Left><Left>
imap <buffer> <silent> \hm :call C_Help("m")
imap <buffer> <silent> \hp :call C_HelpCsupport()
imap <buffer> <silent> \ro :call C_Toggle_Gvim_Xterm()
imap <buffer> <silent> \rx :call C_XtermSize()
imap <buffer> <silent> \rs :call C_Settings()
imap <buffer> <silent> \rh :call C_Hardcopy()
imap <buffer> <silent> \rd :call C_Indent()
imap <buffer> <silent> \rpa :call C_SplintArguments()
imap <buffer> <silent> \rp :call C_SplintCheck():call C_HlMessage()
imap <buffer> <silent> \rma :call C_MakeArguments()
imap <buffer> <silent> \rme :call C_MakeExeToRun()
imap <buffer> <silent> \rmc :call C_MakeClean()
imap <buffer> <silent> \rm :call C_Make()
imap <buffer> <silent> \ra :call C_Arguments()
imap <buffer> <silent> \rr :call C_Run()
imap <buffer> <silent> \rl :call C_Link():call C_HlMessage()
imap <buffer> <silent> \rc :call C_Compile():call C_HlMessage()
inoremap <buffer> <silent> \+c. :call C_InsertTemplate("cpp.catch-points")
inoremap <buffer> <silent> \+ca :call C_InsertTemplate("cpp.catch")
inoremap <buffer> <silent> \+tr :call C_InsertTemplate("cpp.try-catch")
inoremap <buffer> <silent> \+ec :call C_InsertTemplate("cpp.error-class")
inoremap <buffer> <silent> \+tf :call C_InsertTemplate("cpp.template-function")
inoremap <buffer> <silent> \+tai :call C_InsertTemplate("cpp.template-accessor-implementation")
inoremap <buffer> <silent> \+tmi :call C_InsertTemplate("cpp.template-method-implementation")
inoremap <buffer> <silent> \+tcni :call C_InsertTemplate("cpp.template-class-using-new-implementation")
inoremap <buffer> <silent> \+tci :call C_InsertTemplate("cpp.template-class-implementation")
inoremap <buffer> <silent> \+tcn :call C_InsertTemplate("cpp.template-class-using-new-definition")
inoremap <buffer> <silent> \+tc :call C_InsertTemplate("cpp.template-class-definition")
inoremap <buffer> <silent> \+ai :call C_InsertTemplate("cpp.accessor-implementation")
inoremap <buffer> <silent> \+mi :call C_InsertTemplate("cpp.method-implementation")
inoremap <buffer> <silent> \+cni :call C_InsertTemplate("cpp.class-using-new-implementation")
inoremap <buffer> <silent> \+ci :call C_InsertTemplate("cpp.class-implementation")
inoremap <buffer> <silent> \+cn :call C_InsertTemplate("cpp.class-using-new-definition")
inoremap <buffer> <silent> \+c :call C_InsertTemplate("cpp.class-definition")
inoremap <buffer> <silent> \+co :call C_InsertTemplate("cpp.cout")
inoremap <buffer> <silent> \+" :call C_InsertTemplate("cpp.cout-operator")
inoremap <buffer> \nts :CStyle 
inoremap <buffer> <silent> \ntr :call C_RereadTemplates()
inoremap <buffer> <silent> \ntl :call C_BrowseTemplateFiles("Local")
inoremap <buffer> <silent> \ns :call C_ProtoShow()
inoremap <buffer> <silent> \nc :call C_ProtoClear()
inoremap <buffer> <silent> \ni :call C_ProtoInsert()
inoremap <buffer> <silent> \nm :call C_ProtoPick("method")
inoremap <buffer> <silent> \nf :call C_ProtoPick("function")
inoremap <buffer> <silent> \np :call C_ProtoPick("function")
inoremap <buffer> <silent> \ne :call C_CodeSnippet("e")
inoremap <buffer> <silent> \nw :call C_CodeSnippet("w")
inoremap <buffer> <silent> \nr :call C_CodeSnippet("r")
inoremap <buffer> <silent> \ifp :call C_InsertTemplate("idioms.fprintf")
inoremap <buffer> <silent> \ifs :call C_InsertTemplate("idioms.fscanf")
inoremap <buffer> <silent> \io :call C_InsertTemplate("idioms.open-output-file")
inoremap <buffer> <silent> \ii :call C_InsertTemplate("idioms.open-input-file")
inoremap <buffer> <silent> \ias :call C_InsertTemplate("idioms.assert")
inoremap <buffer> <silent> \isi :call C_InsertTemplate("idioms.sizeof")
inoremap <buffer> <silent> \ire :call C_InsertTemplate("idioms.realloc")
inoremap <buffer> <silent> \ima :call C_InsertTemplate("idioms.malloc")
inoremap <buffer> <silent> \ica :call C_InsertTemplate("idioms.calloc")
inoremap <buffer> <silent> \isc :call C_InsertTemplate("idioms.scanf")
inoremap <buffer> <silent> \ip :call C_InsertTemplate("idioms.printf")
inoremap <buffer> <silent> \iu :call C_InsertTemplate("idioms.union")
inoremap <buffer> <silent> \is :call C_InsertTemplate("idioms.struct")
inoremap <buffer> <silent> \ie :call C_InsertTemplate("idioms.enum")
inoremap <buffer> <silent> \in :call C_CodeFor("down")i
inoremap <buffer> <silent> \i0 :call C_CodeFor("up"  )i
inoremap <buffer> <silent> \im :call C_InsertTemplate("idioms.main")
inoremap <buffer> <silent> \isf :call C_InsertTemplate("idioms.function-static")
inoremap <buffer> <silent> \if :call C_InsertTemplate("idioms.function")
inoremap <buffer> <silent> \pp :call C_InsertTemplate("preprocessor.pragma")
inoremap <buffer> <silent> \pl :call C_InsertTemplate("preprocessor.line")
inoremap <buffer> <silent> \pe :call C_InsertTemplate("preprocessor.error")
inoremap <buffer> <silent> \pr0 :call C_PPIf0Remove()
inoremap <buffer> <silent> \pi0 :call C_PPIf0("a")2ji
inoremap <buffer> <silent> \pind :call C_InsertTemplate("preprocessor.ifndef-def-endif")
inoremap <buffer> <silent> \pin :call C_InsertTemplate("preprocessor.ifndef-else-endif")
inoremap <buffer> <silent> \pid :call C_InsertTemplate("preprocessor.ifdef-else-endif")
inoremap <buffer> <silent> \pie :call C_InsertTemplate("preprocessor.if-else-endif")
inoremap <buffer> <silent> \pif :call C_InsertTemplate("preprocessor.if-endif")
inoremap <buffer> <silent> \pu :call C_InsertTemplate("preprocessor.undefine")
inoremap <buffer> <silent> \pd :call C_InsertTemplate("preprocessor.define")
inoremap <buffer> <silent> \p" :call C_InsertTemplate("preprocessor.include-local")
inoremap <buffer> <silent> \p< :call C_InsertTemplate("preprocessor.include-global")
inoremap <buffer> \+pc :IncludeCppC9Library 
inoremap <buffer> \+ps :IncludeCppLibrary 
inoremap <buffer> \pc :IncludeC99Library 
inoremap <buffer> \ps :IncludeStdLibrary 
inoremap <buffer> <silent> \sb :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \s{ :call C_InsertTemplate("statements.block")
inoremap <buffer> <silent> \sc :call C_InsertTemplate("statements.case")
inoremap <buffer> <silent> \ss :call C_InsertTemplate("statements.switch")
inoremap <buffer> <silent> \swh :call C_InsertTemplate("statements.while-block")
inoremap <buffer> <silent> \sw :call C_InsertTemplate("statements.while")
inoremap <buffer> <silent> \se :call C_InsertTemplate("statements.else-block")
inoremap <buffer> <silent> \sife :call C_InsertTemplate("statements.if-block-else")
inoremap <buffer> <silent> \sie :call C_InsertTemplate("statements.if-else")
inoremap <buffer> <silent> \sif :call C_InsertTemplate("statements.if-block")
inoremap <buffer> <silent> \si :call C_InsertTemplate("statements.if")
inoremap <buffer> <silent> \sfo :call C_InsertTemplate("statements.for-block")
inoremap <buffer> <silent> \sf :call C_InsertTemplate("statements.for")
inoremap <buffer> <silent> \sd :call C_InsertTemplate("statements.do-while")
inoremap <buffer> \csc :SpecialComment 
inoremap <buffer> \ckc :KeywordComment 
inoremap <buffer> \chs :HFileSection 
inoremap <buffer> \ccs :CFileSection 
inoremap <buffer> <silent> \cx :call C_CommentToggle( )
inoremap <buffer> <silent> \ct :call C_InsertDateAndTime('dt')a
inoremap <buffer> <silent> \cd :call C_InsertDateAndTime('d')a
inoremap <buffer> <silent> \cfdh :call C_InsertTemplate("comment.file-description-header")
inoremap <buffer> <silent> \cfdi :call C_InsertTemplate("comment.file-description")
inoremap <buffer> <silent> \ccl :call C_InsertTemplate("comment.class")
inoremap <buffer> <silent> \cme :call C_InsertTemplate("comment.method")
inoremap <buffer> <silent> \cfu :call C_InsertTemplate("comment.function")
inoremap <buffer> <silent> \cfr :call C_InsertTemplate("comment.frame")
inoremap <buffer> <silent> \cj :call C_AdjustLineEndComm()a
inoremap <buffer> <silent> \cl :call C_EndOfLineComment()
inoremap <buffer> { {}O
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=:0g0t0(sus
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=~/.vim/c-support/wordlists/c-c++-keywords.list,~/.vim/c-support/wordlists/k+r.list,~/.vim/c-support/wordlists/stl_index.list
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal foldcolumn=3
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=omni#cpp#complete#Main
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
11
normal zo
1618
normal zo
1654
normal zo
1676
normal zo
1695
normal zo
1695
normal zo
1676
normal zo
1654
normal zo
1618
normal zo
1734
normal zo
1797
normal zo
1800
normal zo
1804
normal zo
1819
normal zo
1821
normal zo
1842
normal zo
1851
normal zo
1858
normal zo
1863
normal zo
1870
normal zo
1874
normal zo
1879
normal zo
1870
normal zo
1888
normal zo
1863
normal zo
1858
normal zo
1842
normal zo
1900
normal zo
1819
normal zo
1907
normal zo
1797
normal zo
1913
normal zo
1734
normal zo
1922
normal zo
1932
normal zo
1961
normal zo
1964
normal zo
1968
normal zo
1974
normal zo
1975
normal zo
1993
normal zo
2002
normal zo
1993
normal zo
2011
normal zo
1974
normal zo
2018
normal zo
1961
normal zo
2024
normal zo
1922
normal zo
2034
normal zo
2053
normal zo
2081
normal zo
2083
normal zo
2095
normal zo
2104
normal zo
2118
normal zo
2125
normal zo
2095
normal zo
2145
normal zo
2083
normal zo
2081
normal zo
2203
normal zo
2206
normal zo
2210
normal zo
2216
normal zo
2218
normal zo
2238
normal zo
2247
normal zo
2254
normal zo
2260
normal zo
2266
normal zo
2275
normal zo
2260
normal zo
2254
normal zo
2238
normal zo
2288
normal zo
2216
normal zo
2295
normal zo
2203
normal zo
2301
normal zo
2034
normal zo
2310
normal zo
2319
normal zo
2354
normal zo
2358
normal zo
2362
normal zo
2370
normal zo
2371
normal zo
2386
normal zo
2390
normal zo
2386
normal zo
2401
normal zo
2370
normal zo
2408
normal zo
2354
normal zo
2414
normal zo
2310
normal zo
2422
normal zo
2431
normal zo
2466
normal zo
2470
normal zo
2474
normal zo
2482
normal zo
2484
normal zo
2498
normal zo
2502
normal zo
2498
normal zo
2513
normal zo
2482
normal zo
2520
normal zo
2466
normal zo
2526
normal zo
2422
normal zo
2534
normal zo
2543
normal zo
2572
normal zo
2576
normal zo
2580
normal zo
2588
normal zo
2589
normal zo
2603
normal zo
2610
normal zo
2588
normal zo
2617
normal zo
2572
normal zo
2623
normal zo
2534
normal zo
2631
normal zo
2640
normal zo
2669
normal zo
2673
normal zo
2677
normal zo
2685
normal zo
2687
normal zo
2700
normal zo
2707
normal zo
2685
normal zo
2714
normal zo
2669
normal zo
2720
normal zo
2631
normal zo
2728
normal zo
2737
normal zo
2760
normal zo
2764
normal zo
2768
normal zo
2776
normal zo
2777
normal zo
2791
normal zo
2802
normal zo
2776
normal zo
2809
normal zo
2760
normal zo
2815
normal zo
2728
normal zo
2823
normal zo
2832
normal zo
2855
normal zo
2859
normal zo
2863
normal zo
2871
normal zo
2873
normal zo
2886
normal zo
2897
normal zo
2871
normal zo
2904
normal zo
2855
normal zo
2910
normal zo
2823
normal zo
2918
normal zo
2927
normal zo
2950
normal zo
2954
normal zo
2958
normal zo
2965
normal zo
2966
normal zo
2982
normal zo
2990
normal zo
2982
normal zo
3002
normal zo
2965
normal zo
3009
normal zo
2950
normal zo
3015
normal zo
2918
normal zo
3023
normal zo
3032
normal zo
3055
normal zo
3059
normal zo
3063
normal zo
3070
normal zo
3072
normal zo
3087
normal zo
3095
normal zo
3087
normal zo
3107
normal zo
3070
normal zo
3114
normal zo
3055
normal zo
3120
normal zo
3023
normal zo
3128
normal zo
3144
normal zo
3187
normal zo
3190
normal zo
3194
normal zo
3200
normal zo
3202
normal zo
3219
normal zo
3228
normal zo
3219
normal zo
3238
normal zo
3200
normal zo
3245
normal zo
3187
normal zo
3251
normal zo
3128
normal zo
3260
normal zo
3276
normal zo
3319
normal zo
3322
normal zo
3326
normal zo
3332
normal zo
3334
normal zo
3351
normal zo
3360
normal zo
3351
normal zo
3369
normal zo
3332
normal zo
3376
normal zo
3319
normal zo
3382
normal zo
3260
normal zo
3390
normal zo
3399
normal zo
3412
normal zo
3426
normal zo
3429
normal zo
3436
normal zo
3438
normal zo
3452
normal zo
3459
normal zo
3452
normal zo
3469
normal zo
3436
normal zo
3476
normal zo
3426
normal zo
3482
normal zo
3390
normal zo
3490
normal zo
3499
normal zo
3517
normal zo
3521
normal zo
3525
normal zo
3531
normal zo
3533
normal zo
3546
normal zo
3550
normal zo
3531
normal zo
3556
normal zo
3517
normal zo
3562
normal zo
3490
normal zo
3570
normal zo
3579
normal zo
3586
normal zo
3600
normal zo
3604
normal zo
3608
normal zo
3616
normal zo
3618
normal zo
3632
normal zo
3636
normal zo
3632
normal zo
3644
normal zo
3616
normal zo
3650
normal zo
3600
normal zo
3656
normal zo
3570
normal zo
3664
normal zo
3673
normal zo
3693
normal zo
3697
normal zo
3701
normal zo
3709
normal zo
3711
normal zo
3725
normal zo
3732
normal zo
3738
normal zo
3742
normal zo
3744
normal zo
3751
normal zo
3757
normal zo
3742
normal zo
3738
normal zo
3732
normal zo
3725
normal zo
3771
normal zo
3709
normal zo
3777
normal zo
3693
normal zo
3783
normal zo
3664
normal zo
3791
normal zo
3800
normal zo
3823
normal zo
3826
normal zo
3830
normal zo
3843
normal zo
3844
normal zo
3865
normal zo
3875
normal zo
3865
normal zo
3894
normal zo
3843
normal zo
3901
normal zo
3823
normal zo
3907
normal zo
3791
normal zo
3917
normal zo
3927
normal zo
3939
normal zo
3945
normal zo
3970
normal zo
3973
normal zo
3977
normal zo
3990
normal zo
3991
normal zo
4005
normal zo
4012
normal zo
3990
normal zo
4019
normal zo
3970
normal zo
4025
normal zo
3917
normal zo
4035
normal zo
4045
normal zo
4068
normal zo
4071
normal zo
4075
normal zo
4088
normal zo
4089
normal zo
4103
normal zo
4107
normal zo
4088
normal zo
4114
normal zo
4068
normal zo
4120
normal zo
4035
normal zo
4129
normal zo
4139
normal zo
4149
normal zo
4167
normal zo
4170
normal zo
4174
normal zo
4186
normal zo
4187
normal zo
4206
normal zo
4210
normal zo
4214
normal zo
4219
normal zo
4221
normal zo
4238
normal zo
4219
normal zo
4214
normal zo
4210
normal zo
4206
normal zo
4248
normal zo
4186
normal zo
4255
normal zo
4167
normal zo
4261
normal zo
4129
normal zo
4271
normal zo
4276
normal zo
4279
normal zo
4282
normal zo
4279
normal zo
4276
normal zo
4271
normal zo
4294
normal zo
4305
normal zo
4308
normal zo
4311
normal zo
4308
normal zo
4305
normal zo
4294
normal zo
4323
normal zo
4333
normal zo
4343
normal zo
4369
normal zo
4372
normal zo
4376
normal zo
4386
normal zo
4387
normal zo
4410
normal zo
4413
normal zo
4424
normal zo
4413
normal zo
4410
normal zo
4434
normal zo
4386
normal zo
4441
normal zo
4369
normal zo
4447
normal zo
4323
normal zo
4457
normal zo
4473
normal zo
4518
normal zo
4521
normal zo
4525
normal zo
4540
normal zo
4542
normal zo
4564
normal zo
4573
normal zo
4580
normal zo
4584
normal zo
4590
normal zo
4594
normal zo
4599
normal zo
4590
normal zo
4606
normal zo
4584
normal zo
4580
normal zo
4564
normal zo
4618
normal zo
4540
normal zo
4625
normal zo
4518
normal zo
4631
normal zo
4457
normal zo
4640
normal zo
4656
normal zo
4701
normal zo
4704
normal zo
4708
normal zo
4723
normal zo
4725
normal zo
4742
normal zo
4751
normal zo
4742
normal zo
4759
normal zo
4723
normal zo
4766
normal zo
4701
normal zo
4772
normal zo
4640
normal zo
4780
normal zo
4789
normal zo
4813
normal zo
4817
normal zo
4821
normal zo
4831
normal zo
4833
normal zo
4846
normal zo
4855
normal zo
4831
normal zo
4862
normal zo
4813
normal zo
4868
normal zo
4780
normal zo
4880
normal zo
4897
normal zo
4919
normal zo
4923
normal zo
4927
normal zo
4948
normal zo
4950
normal zo
4964
normal zo
4980
normal zo
4948
normal zo
4994
normal zo
4919
normal zo
5000
normal zo
4880
normal zo
5010
normal zo
5022
normal zo
5044
normal zo
5048
normal zo
5052
normal zo
5073
normal zo
5077
normal zo
5093
normal zo
5073
normal zo
5107
normal zo
5044
normal zo
5113
normal zo
5010
normal zo
5128
normal zo
5138
normal zo
5171
normal zo
5175
normal zo
5180
normal zo
5181
normal zo
5192
normal zo
5196
normal zo
5203
normal zo
5196
normal zo
5180
normal zo
5212
normal zo
5171
normal zo
5218
normal zo
5128
normal zo
5228
normal zo
5243
normal zo
5252
normal zo
5278
normal zo
5282
normal zo
5287
normal zo
5288
normal zo
5299
normal zo
5303
normal zo
5310
normal zo
5303
normal zo
5287
normal zo
5319
normal zo
5278
normal zo
5325
normal zo
5243
normal zo
5332
normal zo
5349
normal zo
5357
normal zo
5373
normal zo
5389
normal zo
5391
normal zo
5396
normal zo
5397
normal zo
5409
normal zo
5410
normal zo
5433
normal zo
5409
normal zo
5443
normal zo
5450
normal zo
5443
normal zo
5396
normal zo
5459
normal zo
5389
normal zo
5465
normal zo
5349
normal zo
5472
normal zo
5492
normal zo
5501
normal zo
5532
normal zo
5534
normal zo
5537
normal zo
5538
normal zo
5549
normal zo
5550
normal zo
5575
normal zo
5549
normal zo
5537
normal zo
5583
normal zo
5534
normal zo
5596
normal zo
5532
normal zo
5602
normal zo
5492
normal zo
5614
normal zo
5632
normal zo
5645
normal zo
5664
normal zo
5666
normal zo
5668
normal zo
5679
normal zo
5680
normal zo
5701
normal zo
5707
normal zo
5719
normal zo
5701
normal zo
5679
normal zo
5668
normal zo
5732
normal zo
5666
normal zo
5752
normal zo
5664
normal zo
5758
normal zo
5614
normal zo
5770
normal zo
5783
normal zo
5787
normal zo
5789
normal zo
5794
normal zo
5787
normal zo
5783
normal zo
5804
normal zo
5806
normal zo
5811
normal zo
5804
normal zo
5770
normal zo
5822
normal zo
5834
normal zo
5848
normal zo
5869
normal zo
5871
normal zo
5874
normal zo
5883
normal zo
5884
normal zo
5903
normal zo
5914
normal zo
5903
normal zo
5883
normal zo
5874
normal zo
5926
normal zo
5871
normal zo
5939
normal zo
5869
normal zo
5945
normal zo
5822
normal zo
5956
normal zo
5969
normal zo
5973
normal zo
5975
normal zo
5980
normal zo
5973
normal zo
5969
normal zo
5991
normal zo
5993
normal zo
5998
normal zo
5991
normal zo
5956
normal zo
6012
normal zo
6022
normal zo
6055
normal zo
6057
normal zo
6060
normal zo
6069
normal zo
6070
normal zo
6069
normal zo
6060
normal zo
6091
normal zo
6057
normal zo
6104
normal zo
6055
normal zo
6110
normal zo
6012
normal zo
6122
normal zo
6132
normal zo
6158
normal zo
6160
normal zo
6163
normal zo
6172
normal zo
6173
normal zo
6172
normal zo
6163
normal zo
6202
normal zo
6160
normal zo
6215
normal zo
6158
normal zo
6221
normal zo
6122
normal zo
6230
normal zo
6235
normal zo
6245
normal zo
6278
normal zo
6282
normal zo
6287
normal zo
6291
normal zo
6294
normal zo
6295
normal zo
6309
normal zo
6322
normal zo
6337
normal zo
6344
normal zo
6354
normal zo
6372
normal zo
6403
normal zo
6344
normal zo
6309
normal zo
6417
normal zo
6294
normal zo
6424
normal zo
6235
normal zo
6432
normal zo
6438
normal zo
6447
normal zo
6481
normal zo
6498
normal zo
6505
normal zo
6535
normal zo
6539
normal zo
6545
normal zo
6550
normal zo
6572
normal zo
6573
normal zo
6592
normal zo
6602
normal zo
6592
normal zo
6613
normal zo
6572
normal zo
6619
normal zo
6438
normal zo
6627
normal zo
6749
normal zo
6754
normal zo
6767
normal zo
6784
normal zo
6788
normal zo
6793
normal zo
6799
normal zo
6800
normal zo
6812
normal zo
6823
normal zo
6828
normal zo
6823
normal zo
6812
normal zo
6840
normal zo
6799
normal zo
6847
normal zo
6754
normal zo
6858
normal zo
6868
normal zo
6923
normal zo
6927
normal zo
6932
normal zo
6938
normal zo
6946
normal zo
6959
normal zo
6970
normal zo
6977
normal zo
6983
normal zo
6970
normal zo
6946
normal zo
6996
normal zo
6938
normal zo
7013
normal zo
6858
normal zo
7020
normal zo
7025
normal zo
7035
normal zo
7053
normal zo
7057
normal zo
7062
normal zo
7066
normal zo
7072
normal zo
7080
normal zo
7087
normal zo
7072
normal zo
7100
normal zo
7025
normal zo
7107
normal zo
7111
normal zo
7120
normal zo
7138
normal zo
7141
normal zo
7146
normal zo
7150
normal zo
7162
normal zo
7150
normal zo
7168
normal zo
7138
normal zo
7174
normal zo
7111
normal zo
7182
normal zo
7186
normal zo
7194
normal zo
7212
normal zo
7216
normal zo
7220
normal zo
7229
normal zo
7230
normal zo
7242
normal zo
7252
normal zo
7242
normal zo
7261
normal zo
7229
normal zo
7268
normal zo
7212
normal zo
7274
normal zo
7186
normal zo
7281
normal zo
7285
normal zo
7293
normal zo
7320
normal zo
7324
normal zo
7328
normal zo
7339
normal zo
7340
normal zo
7352
normal zo
7358
normal zo
7352
normal zo
7371
normal zo
7339
normal zo
7377
normal zo
7320
normal zo
7383
normal zo
7285
normal zo
7390
normal zo
7394
normal zo
7402
normal zo
7423
normal zo
7427
normal zo
7431
normal zo
7441
normal zo
7442
normal zo
7454
normal zo
7462
normal zo
7454
normal zo
7475
normal zo
7441
normal zo
7487
normal zo
7423
normal zo
7493
normal zo
7394
normal zo
7501
normal zo
7509
normal zo
7535
normal zo
7539
normal zo
7543
normal zo
7552
normal zo
7553
normal zo
7565
normal zo
7566
normal zo
7599
normal zo
7621
normal zo
7565
normal zo
7641
normal zo
7552
normal zo
7648
normal zo
7535
normal zo
7654
normal zo
7501
normal zo
7662
normal zo
7674
normal zo
7691
normal zo
7704
normal zo
7708
normal zo
7713
normal zo
7714
normal zo
7726
normal zo
7728
normal zo
7742
normal zo
7753
normal zo
7761
normal zo
7753
normal zo
7726
normal zo
7773
normal zo
7713
normal zo
7785
normal zo
7704
normal zo
7791
normal zo
7674
normal zo
7806
normal zo
7833
normal zo
7837
normal zo
7842
normal zo
7843
normal zo
7855
normal zo
7860
normal zo
7855
normal zo
7870
normal zo
7842
normal zo
7876
normal zo
7833
normal zo
7882
normal zo
7806
normal zo
7890
normal zo
7917
normal zo
7921
normal zo
7926
normal zo
7932
normal zo
7941
normal zo
7945
normal zo
7941
normal zo
7959
normal zo
7932
normal zo
7965
normal zo
7917
normal zo
7971
normal zo
7890
normal zo
7986
normal zo
8002
normal zo
8019
normal zo
8023
normal zo
8033
normal zo
8041
normal zo
8048
normal zo
8054
normal zo
8060
normal zo
8054
normal zo
8070
normal zo
8041
normal zo
8083
normal zo
8033
normal zo
8089
normal zo
8019
normal zo
8095
normal zo
7986
normal zo
8111
normal zo
8142
normal zo
8146
normal zo
8151
normal zo
8157
normal zo
8166
normal zo
8176
normal zo
8157
normal zo
8182
normal zo
8142
normal zo
8188
normal zo
8111
normal zo
8202
normal zo
8207
normal zo
8233
normal zo
8237
normal zo
8242
normal zo
8246
normal zo
8253
normal zo
8258
normal zo
8253
normal zo
8268
normal zo
8246
normal zo
8274
normal zo
8233
normal zo
8280
normal zo
8202
normal zo
8289
normal zo
8294
normal zo
8321
normal zo
8325
normal zo
8330
normal zo
8336
normal zo
8343
normal zo
8357
normal zo
8336
normal zo
8363
normal zo
8321
normal zo
8369
normal zo
8289
normal zo
8376
normal zo
8387
normal zo
8392
normal zo
8413
normal zo
8415
normal zo
8419
normal zo
8425
normal zo
8413
normal zo
8430
normal zo
8447
normal zo
8451
normal zo
8456
normal zo
8461
normal zo
8468
normal zo
8489
normal zo
8468
normal zo
8499
normal zo
8461
normal zo
8505
normal zo
8447
normal zo
8511
normal zo
8387
normal zo
8518
normal zo
8529
normal zo
8557
normal zo
8561
normal zo
8566
normal zo
8571
normal zo
8578
normal zo
8588
normal zo
8578
normal zo
8605
normal zo
8571
normal zo
8611
normal zo
8557
normal zo
8617
normal zo
8529
normal zo
8624
normal zo
8634
normal zo
8639
normal zo
8650
normal zo
8688
normal zo
8692
normal zo
8697
normal zo
8701
normal zo
8708
normal zo
8715
normal zo
8722
normal zo
8708
normal zo
8733
normal zo
8701
normal zo
8739
normal zo
8688
normal zo
8745
normal zo
8634
normal zo
8760
normal zo
8765
normal zo
8776
normal zo
8800
normal zo
8804
normal zo
8809
normal zo
8813
normal zo
8820
normal zo
8836
normal zo
8820
normal zo
8858
normal zo
8813
normal zo
8864
normal zo
8800
normal zo
8870
normal zo
8760
normal zo
8877
normal zo
8886
normal zo
8896
normal zo
8906
normal zo
8921
normal zo
8925
normal zo
8930
normal zo
8937
normal zo
8944
normal zo
8948
normal zo
8937
normal zo
8954
normal zo
8921
normal zo
8960
normal zo
8886
normal zo
8967
normal zo
8976
normal zo
8986
normal zo
8996
normal zo
9011
normal zo
9015
normal zo
9020
normal zo
9027
normal zo
9034
normal zo
9038
normal zo
9027
normal zo
9044
normal zo
9011
normal zo
9050
normal zo
8976
normal zo
9057
normal zo
9067
normal zo
9077
normal zo
9095
normal zo
9099
normal zo
9104
normal zo
9113
normal zo
9120
normal zo
9124
normal zo
9120
normal zo
9133
normal zo
9113
normal zo
9139
normal zo
9095
normal zo
9145
normal zo
9067
normal zo
9152
normal zo
9163
normal zo
9173
normal zo
9179
normal zo
9195
normal zo
9199
normal zo
9204
normal zo
9212
normal zo
9219
normal zo
9222
normal zo
9219
normal zo
9242
normal zo
9212
normal zo
9248
normal zo
9195
normal zo
9254
normal zo
9163
normal zo
9260
normal zo
9271
normal zo
9277
normal zo
9280
normal zo
9283
normal zo
9280
normal zo
9277
normal zo
9271
normal zo
9303
normal zo
9313
normal zo
9322
normal zo
9340
normal zo
9344
normal zo
9349
normal zo
9355
normal zo
9364
normal zo
9370
normal zo
9364
normal zo
9389
normal zo
9355
normal zo
9395
normal zo
9340
normal zo
9401
normal zo
9303
normal zo
let s:l = 1851 - ((0 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1851
normal! 04l
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
